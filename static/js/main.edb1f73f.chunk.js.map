{"version":3,"sources":["style/theme/Theme.js","style/responsive.js","style/theme/index.js","lib/theme.js","VerticalSlider.js","components/ComponentContainer.js","lib/svgs.js","lib/utils.js","components/NfcScanAnim.js","components/LoadingElement.js","components/LoadExample.js","App.js","reportWebVitals.js","index.js"],"names":["Colors","main","text","link","header","secondary","disabled","font","ablack","instructions","background","recording","this","aBlack","YES","NO","SOMEWHAT","Layout","paddingHorizontal","Theme","colors","layout","resRange","minResolution","maxResolution","whResRange","minWidth","minHeight","maxWidth","maxHeight","width","height","DIMENSION_OPTS","mobile","mobileLandscape","tablet","tabletLandscape","tabletXL","tabletXLLandscape","laptop","_4K","global","createDimensionsObject","dimensions","isPortrait","isLandscape","sDimensions","EhState","fromInitialState","Dimensions","get","initialState","ph","percentage","min","max","numeric","pw","rsp","functionOf","rspArg","bind","createDimensionsInitialState","responsive","options","minVal","maxVal","maxLim","minLim","baseUnit","res","Math","selectDefinition","state","keys","Object","firstKey","length","windowDim","key","dims","rspArgs","assign","definition","dimensionName","makeRsp","func","addEventListener","newDim","window","fire","plugRsp","size","percentageDimension","dim","mainTheme","require","primary","placeholder","error","paddingTop","sTheme","theme","GRADIENT_COLOR_1","GRADIENT_COLOR_2","GRADIENT_COLOR_3","SLIDER_MOVEMENT_MARGIN","DUMMY_ANSWER_SET","Container","withEhState","styled","View","GradientSliderView","LinearGradient","SlideAnswerSpacer","AnswerContainer","Animated","SliderButton","AnswerView","Pressable","isSelected","AnswerText","Text","BackgroundColorView","itemHeightPct","color","topPos","shadows","StyleSheet","create","boxShadow","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","startAnim","anim","toVal","duration","timing","toValue","useNativeDriver","start","getCurrentAnswerIndex","choiceVal","totalItemAmt","ceil","renderAnswerValues","answerArray","userAnswer","currentColor","slideAnim","colorAnimInterp","setCurrButtonLoc","buttonAnim","textBoxColorAnimInterp","answerNumber","answerBoxHeight","console","log","map","answer","idx","onPress","limit","newButtonLoc","style","backgroundColor","transform","translateY","getInterpolatedColor","color_1","color_2","interp","interpolateRgb","colorInterpolator","VerticalAnswerSlider","useState","currButtonLoc","setUserAnswer","setCurrentColor","setAnswerBoxHeight","setAnswerNumber","textBoxColorAnim","useRef","Value","current","interpolate","inputRange","outputRange","colorAnim","gestureOffset","y","useEffect","buttonLoc","boxHeight","margin","val","buttonLocToAnswer","setValue","TRANSITION_DELAY","panResponder","useMemo","PanResponder","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","dy","onPanResponderTerminationRequest","onPanResponderRelease","snapVal","totalOffset","tempOffset","onPanResponderTerminate","onShouldBlockNativeResponder","locations","panHandlers","onLayout","e","nativeEvent","div","TitleContainer","ContainerTitle","h2","ComponentContainer","title","children","CustText","ProfileSvg","xmlns","viewBox","fill","d","PhoneSvg","CardSvg","overflow","borderRadius","x","stroke","fontSize","fontWeight","fontFamily","textAnchor","withEhStates","comp","withed","ehStates","forEach","ehstate","timedAnimation","dur","easing","Easing","linear","inOut","ease","Spacer","TagScanAnimation","useEhState","phoneAnim","phoneAnimInterp","loop","sequence","zIndex","marginLeft","LoadElement","marginTop","marginBottom","marginRight","alignSelf","animationHandler","from","to","LoadingElement","hasValue","pulseAnim","opacity","ProfileContainer","CustLoadDivTitle","CustLoadItem","ProfilePicSection","TextSection","LoadExample","TextContainer","IntroText","p","isLast","isFirst","App","selectedVertSliderCount","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edb1f73f.chunk.js","sourcesContent":["export class Colors {\r\n\tconstructor(\r\n\t\tmain,\r\n\t\ttext,\r\n\t\tlink,\r\n\t\theader,\r\n\t\tsecondary,\r\n\t\tdisabled,\r\n\t\tfont,\r\n\t\tablack,\r\n\t\tinstructions,\r\n\t\tbackground,\r\n\t\trecording\r\n\t) {\r\n\t\tthis.main = main;\r\n\t\tthis.text = text;\r\n\t\tthis.link = link;\r\n\t\tthis.header = header;\r\n\t\tthis.secondary = secondary;\r\n\t\tthis.disabled = disabled;\r\n\t\tthis.font = font;\r\n\t\tthis.aBlack = ablack;\r\n\t\tthis.instructions = instructions;\r\n\t\tthis.background = background;\r\n\t\tthis.recording = recording;\r\n\t\tthis.YES = \"yes\";\r\n\t\tthis.NO = \"no\";\r\n\t\tthis.SOMEWHAT = \"somewhat\";\r\n\t}\r\n}\r\n\r\nexport class Layout {\r\n\tconstructor(paddingHorizontal) {\r\n\t\tthis.paddingHorizontal = paddingHorizontal;\r\n\t}\r\n}\r\n\r\nexport class Theme {\r\n\t/**\r\n\t *\r\n\t * @param {Colors} colors\r\n\t * @param {Layout} layout\r\n\t */\r\n\tconstructor(colors, layout) {\r\n\t\tthis.colors = colors;\r\n\t\tthis.layout = layout;\r\n\t}\r\n}\r\n","import { EhState } from \"@foursk/eh\";\r\nimport { Dimensions } from \"react-native\";\r\n// import { NOT } from '../lib/utils';\r\n\r\n/**\r\n * @typedef {{minResolution: number, maxResolution: number}} ResolutionRange\r\n *\r\n *\r\n * @typedef {{width: ResolutionRange, height: ResolutionRange}} DimensionRanges\r\n *\r\n * @typedef {{minVal: number, maxVal: number, maxLim: number, minLim: number}} ResponsiveDefinitions\r\n *\r\n * @typedef {\"width\" | \"height\"} FunctionOfDimension\r\n *\r\n * @typedef {ResolutionRange & ResponsiveDefinitions & {\r\n * baseUnit: \"px\" | \"%\",\r\n * functionOf: FunctionOfDimension\r\n * }} ResponsiveOptions\r\n *\r\n * @typedef {{[dim in keyof DIMENSION_OPTS]: ResponsiveDefinitions}} ResponsivenessArgument\r\n */\r\n\r\n/**\r\n *\r\n * @param {number} minResolution\r\n * @param {number} maxResolution\r\n * @returns {ResolutionRange}\r\n */\r\nconst resRange = (minResolution, maxResolution) => ({\r\n\tminResolution,\r\n\tmaxResolution,\r\n});\r\n\r\n/**\r\n *\r\n * @param {number} minWidth\r\n * @param {number} minHeight\r\n * @param {number} maxWidth\r\n * @param {number} maxHeight\r\n * @returns {DimensionRanges}\r\n */\r\nconst whResRange = (minWidth, minHeight, maxWidth, maxHeight) => ({\r\n\twidth: resRange(minWidth, maxWidth),\r\n\theight: resRange(minHeight, maxHeight),\r\n});\r\n\r\nexport const DIMENSION_OPTS = {\r\n\tmobile: whResRange(320, 568, 375, 812),\r\n\tmobileLandscape: whResRange(568, 320, 812, 375),\r\n\ttablet: whResRange(375, 812, 768, 1024),\r\n\ttabletLandscape: whResRange(812, 375, 1024, 768),\r\n\ttabletXL: whResRange(768, 1024, 1366, 1366),\r\n\ttabletXLLandscape: whResRange(1024, 768, 1366, 1366),\r\n\tlaptop: whResRange(1440, 800, 1920, 900),\r\n\t_4K: whResRange(1920, 900, 2560, 1000),\r\n\tglobal: whResRange(320, 568, 1920, 900),\r\n};\r\n\r\n/**\r\n *\r\n * @param {import('react-native').ScaledSize} dimensions\r\n */\r\nfunction createDimensionsObject(dimensions) {\r\n\tconst isPortrait = dimensions.height > dimensions.width;\r\n\treturn {\r\n\t\tdimensions,\r\n\t\tisPortrait,\r\n\t\tisLandscape: !isPortrait,\r\n\t};\r\n}\r\n\r\nfunction createDimensionsInitialState() {\r\n\tconst dimensions = Dimensions.get(\"window\");\r\n\tconst initialState = {\r\n\t\t...createDimensionsObject(dimensions),\r\n\t\t/**\r\n\t\t * Set size as percentage of window height\r\n\t\t * @param {number} percentage\r\n\t\t * @param {number?} min\r\n\t\t * @param {number?} max\r\n\t\t */\r\n\t\tph(percentage, min, max, numeric = false) {\r\n\t\t\treturn ph(percentage, min, max, this.dimensions, numeric);\r\n\t\t},\r\n\t\t/**\r\n\t\t * Set size as percentage of window width\r\n\t\t * @param {number} percentage\r\n\t\t * @param {number?} min\r\n\t\t * @param {number?} max\r\n\t\t */\r\n\t\tpw(percentage, min, max, numeric = false) {\r\n\t\t\treturn pw(percentage, min, max, this.dimensions, numeric);\r\n\t\t},\r\n\t\t/**\r\n\t\t *\r\n\t\t * @param {FunctionOfDimension} functionOf\r\n\t\t * @param {ResponsivenessArgument} rspArg\r\n\t\t */\r\n\t\trsp(functionOf, rspArg) {\r\n\t\t\treturn rsp(this.dimensions, functionOf, false, rspArg);\r\n\t\t},\r\n\t};\r\n\r\n\tinitialState.ph = initialState.ph.bind(initialState);\r\n\tinitialState.pw = initialState.pw.bind(initialState);\r\n\treturn initialState;\r\n}\r\n\r\nexport const sDimensions = EhState.fromInitialState(\r\n\tcreateDimensionsInitialState()\r\n);\r\n\r\nDimensions.addEventListener(\"change\", ({ window }) => {\r\n\tconst newDim = createDimensionsObject(window);\r\n\tsDimensions.fire(newDim);\r\n});\r\n\r\nexport function styledPortrait(portraitVal, landscapeVal) {\r\n\treturn ({ isPortrait }) => (isPortrait ? portraitVal : landscapeVal);\r\n}\r\n\r\n/**\r\n *\r\n * @param {ResponsiveOptions} options\r\n * @param {boolean} numeric\r\n */\r\nexport function responsive(options, numeric) {\r\n\tconst {\r\n\t\tminResolution,\r\n\t\tmaxResolution,\r\n\t\tminVal,\r\n\t\tmaxVal,\r\n\t\tmaxLim,\r\n\t\tminLim,\r\n\t\tbaseUnit,\r\n\t\tfunctionOf,\r\n\t} = options;\r\n\r\n\t// console.log('RSP', {\r\n\t//   minResolution,\r\n\t//   maxResolution,\r\n\t//   minVal,\r\n\t//   maxVal,\r\n\t//   maxLim,\r\n\t//   minLim,\r\n\t//   baseUnit,\r\n\t//   functionOf\r\n\t// });\r\n\t// const functionOf =\r\n\t//   functionOfStr === 'width' ? dimensions.width : dimensions.height;\r\n\r\n\tlet res =\r\n\t\tminVal +\r\n\t\t((functionOf - minResolution) * (maxVal - minVal)) /\r\n\t\t\t(maxResolution - minResolution);\r\n\tconst resOrig = res;\r\n\r\n\tif (minLim) res = Math.max(minLim, res);\r\n\tif (maxLim) res = Math.min(maxLim, res);\r\n\tif (numeric) return res;\r\n\r\n\t// console.log('RSP', {\r\n\t//   resOrig,\r\n\t//   res,\r\n\t//   minResolution,\r\n\t//   maxResolution,\r\n\t//   minVal,\r\n\t//   maxVal,\r\n\t//   maxLim,\r\n\t//   minLim,\r\n\t//   baseUnit,\r\n\t//   functionOf\r\n\t// });\r\n\r\n\tconst strRes = `${res}${baseUnit || \"px\"}`;\r\n\treturn strRes;\r\n}\r\n\r\n/**\r\n *\r\n * @param {ResponsivenessArgument} rspArg\r\n * @param {FunctionOfDimension} functionOf\r\n * @returns {[ResponsiveDefinitions, keyof DIMENSION_OPTS]}\r\n */\r\nexport function selectDefinition(\r\n\trspArg,\r\n\tfunctionOf,\r\n\tdimensions = sDimensions.state\r\n) {\r\n\t/** @type {[keyof DIMENSION_OPTS]} */\r\n\tconst keys = Object.keys(rspArg);\r\n\tconst firstKey = keys[0];\r\n\tif (keys.length === 1) {\r\n\t\treturn [rspArg[firstKey], firstKey];\r\n\t}\r\n\r\n\tconst windowDim = dimensions[functionOf];\r\n\t// console.log('windowDim', windowDim);\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst dims = DIMENSION_OPTS[key][functionOf];\r\n\t\tif (windowDim <= dims.maxResolution && windowDim >= dims.minResolution) {\r\n\t\t\treturn [rspArg[key], key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn [rspArg[firstKey], firstKey];\r\n}\r\n\r\n/**\r\n * @param {import('react-native').ScaledSize} dimensions\r\n * @param {FunctionOfDimension} functionOf\r\n * @param {boolean} numeric\r\n * @param {ResponsivenessArgument} rspArg\r\n * @param {...ResponsivenessArgument} rspArgs\r\n */\r\nexport function rsp(dimensions, functionOf, numeric, rspArg, ...rspArgs) {\r\n\t// console.log('RSP', { dimensions, functionOf, rspArg });\r\n\tif (rspArgs.length > 0) Object.assign(rspArg, ...rspArgs);\r\n\tconst [definition, dimensionName] = selectDefinition(\r\n\t\trspArg,\r\n\t\tfunctionOf,\r\n\t\tdimensions\r\n\t);\r\n\t// console.log('definition', { definition, dimensionName });\r\n\tObject.assign(definition, DIMENSION_OPTS[dimensionName][functionOf]);\r\n\t// console.log('dimensions[functionOf]', { dimensions, functionOf });\r\n\tdefinition.functionOf = dimensions[functionOf];\r\n\treturn responsive(definition, numeric);\r\n}\r\n\r\n/**\r\n * Make rsp function for component that is rendered with sDimensions [withEhState(sDimensions)]\r\n * @param {FunctionOfDimension} functionOf\r\n * @param {ResponsivenessArgument} rspArg\r\n * @param {...ResponsivenessArgument} rspArgs\r\n */\r\nexport function makeRsp(functionOf, rspArg, ...rspArgs) {\r\n\t/**\r\n\t *\r\n\t * @param {{dimensions: import('react-native').ScaledSize}} param0\r\n\t * @param {boolean} numeric\r\n\t */\r\n\tconst func = function ({ dimensions }, numeric) {\r\n\t\treturn rsp(dimensions, functionOf, numeric, rspArg, ...rspArgs);\r\n\t};\r\n\treturn func;\r\n}\r\n\r\n/**\r\n * @typedef {({dimensions: ScaledSize}, numeric:boolean) => string | number} RSPFunction\r\n * @param {RSPFunction} portrait\r\n * @param {RSPFunction} landscape\r\n */\r\nexport function makeLandscapableRsp(portrait, landscape) {\r\n\t/**\r\n\t *\r\n\t * @param {{dimensions: import('react-native').ScaledSize}} param0\r\n\t * @param {boolean} numeric\r\n\t */\r\n\tconst func = function (dimState, numeric) {\r\n\t\tconst { isPortrait } = dimState;\r\n\t\tconst rspFunc = isPortrait ? portrait : landscape;\r\n\t\treturn rspFunc(dimState, numeric);\r\n\t};\r\n\treturn func;\r\n}\r\n\r\n/**\r\n *\r\n * @param {keyof DIMENSION_OPTS} size\r\n * @param {number} minVal\r\n * @param {number} maxVal\r\n * @param {number} minLim\r\n * @param {number} maxLim\r\n * @returns {ResponsivenessArgument}\r\n */\r\nexport const plugRsp = (size, minVal, maxVal, minLim, maxLim) => ({\r\n\t[size]: {\r\n\t\tminVal,\r\n\t\tmaxVal,\r\n\t\tminLim,\r\n\t\tmaxLim,\r\n\t},\r\n});\r\n\r\n/**\r\n *\r\n * @param {number} minResolution\r\n * @param {number} maxResolution\r\n * @returns {ResolutionRange}\r\n */\r\nexport const customRange = (minResolution, maxResolution) => ({\r\n\tminResolution,\r\n\tmaxResolution,\r\n});\r\n\r\n/**\r\n *\r\n * @param {number} percentage\r\n * @param {number} dim\r\n * @param {number?} min\r\n * @param {number?} max\r\n */\r\nfunction percentageDimension(percentage, dim, min, max, numeric = false) {\r\n\tlet res = (percentage * dim) / 100;\r\n\tif (min) res = Math.max(min, res);\r\n\tif (max) res = Math.min(max, res);\r\n\tif (numeric) return res;\r\n\treturn `${res}px`;\r\n}\r\n\r\n/**\r\n *\r\n * @param {number} percentage\r\n * @param {number?} min\r\n * @param {number?} max\r\n * @param {DimensionRanges} dimensions\r\n */\r\nexport function ph(\r\n\tpercentage,\r\n\tmin,\r\n\tmax,\r\n\tdimensions = sDimensions.state,\r\n\tnumeric = false\r\n) {\r\n\treturn percentageDimension(percentage, dimensions.height, min, max, numeric);\r\n}\r\n\r\n/**\r\n *\r\n * @param {number} percentage\r\n * @param {number?} min\r\n * @param {number?} max\r\n * * @param {DimensionRanges} dimensions\r\n */\r\nexport function pw(\r\n\tpercentage,\r\n\tmin,\r\n\tmax,\r\n\tdimensions = sDimensions.state,\r\n\tnumeric = false\r\n) {\r\n\treturn percentageDimension(percentage, dimensions.width, min, max, numeric);\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst { Theme } = require(\"./Theme\");\r\n\r\nexport const mainTheme = new Theme(\r\n\t{\r\n\t\tprimary: \"#53B5AB\",\r\n\t\tsecondary: \"white\",\r\n\t\tdisabled: \"rgba(83, 181, 171, 0.5)\",\r\n\t\theader: \"#2F464B\",\r\n\t\ttext: \"#2F464B\",\r\n\t\tplaceholder: \"#ABABAB\",\r\n\t\tfont: \"Poppins-Medium\",\r\n\t\taBlack: \"#504f54\",\r\n\t\terror: \"#DD1010\",\r\n\t\tinstructions: \"rgba(47,72,75,0.6)\",\r\n\t\tmain: \"#53B4AB\",\r\n\t\tbackground: \"#FAFAFA\",\r\n\t\trecording: \"#BC301F\",\r\n\t\tYES: \"rgb(186,34,34)\",\r\n\t\tSOMEWHAT: \"rgb(199,154,0)\",\r\n\t\tNO: \"rgb(74,181,117)\",\r\n\t},\r\n\t{\r\n\t\tpaddingHorizontal: \"20px\",\r\n\t\tpaddingTop: \"20px\",\r\n\t}\r\n);\r\n\r\n// export const withPadding = (Comp) => ({ ...props }) => styled(Comp)``;\r\n","import { EhState } from \"@foursk/eh\";\r\nimport { mainTheme } from \"../style/theme\";\r\n\r\nexport const sTheme = EhState.fromInitialState({ theme: mainTheme });\r\n","import { withEhState } from \"@foursk/eh-react-hooks\";\r\nimport { interpolateRgb } from \"d3-interpolate\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { Animated, PanResponder, Pressable, StyleSheet } from \"react-native\";\r\nimport LinearGradient from \"react-native-web-linear-gradient\";\r\nimport styled from \"styled-components/native\";\r\nimport { sDimensions, makeRsp, plugRsp } from \"./style/responsive\";\r\nimport { sTheme } from \"./lib/theme\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst GRADIENT_COLOR_1 = \"#BA2222\";\r\nconst GRADIENT_COLOR_2 = \"#C79A00\";\r\nconst GRADIENT_COLOR_3 = \"#4AB575\";\r\nconst TRANSITION_DELAY = 500;\r\nconst SLIDER_MOVEMENT_MARGIN = 0.9;\r\n\r\nexport const DUMMY_ANSWER_SET = [\r\n\t[\"Likely\", \"Neutral\", \"Unlikely\"],\r\n\r\n\t[\"Very likely\", \"Likely\", \"Neutral\", \"Unlikely\", \"Very unlikely\"],\r\n\r\n\t[\r\n\t\t\"Absolutely\",\r\n\t\t\"Very likely\",\r\n\t\t\"Likely\",\r\n\t\t\"Neutral\",\r\n\t\t\"Unlikely\",\r\n\t\t\"Very unlikely\",\r\n\t\t\"Absolutely not\",\r\n\t],\r\n];\r\n\r\n// Mobile  w: 320-375, tab  w: 375-768, global  w: 320-1920\r\n//         h: 568-812       h: 812-1024         h: 568-900\r\n// Specs mobile:\r\n// Width: 206-219 @ 332-414\r\n// Height: 191-199 @ 719-896\r\n// Specs Global:\r\n// Width: 206.72-275 @ 1024-1920\r\n// Height: 191-249 @ 905-1428\r\nconst Container = withEhState(\r\n\tsDimensions,\r\n\twithEhState(\r\n\t\tsTheme,\r\n\t\tstyled.View`\r\n\t\t\tflex-direction: row;\r\n\t\t\t/*\r\n      width: ${makeRsp(\r\n\t\t\t\t\"width\",\r\n\t\t\t\tplugRsp(\"mobile\", 200, 230, 195, 240),\r\n\t\t\t\tplugRsp(\"tablet\", 230, 270, 220, 280),\r\n\t\t\t\tplugRsp(\"global\", 200, 275, 195, 275)\r\n\t\t\t)};\r\n      */\r\n\t\t\theight: ${makeRsp(\r\n\t\t\t\t\"height\",\r\n\t\t\t\tplugRsp(\"mobile\", 190, 200),\r\n\t\t\t\tplugRsp(\"tablet\", 200, 240),\r\n\t\t\t\tplugRsp(\"global\", 200, 249)\r\n\t\t\t)};\r\n\t\t\tmargin-top: 16px;\r\n\t\t`\r\n\t)\r\n);\r\n\r\n// Mobile  w: 320-375, tab  w: 375-768, global  w: 320-1920\r\n//         h: 568-812       h: 812-1024         h: 568-900\r\n// Specs mobile:\r\n// Width: 19.18-19.98 @ 332-414\r\n// Specs Global:\r\n// Width:  @ 1024-1920\r\nconst GradientSliderView = withEhState(\r\n\tsDimensions,\r\n\tstyled(LinearGradient)`\r\n\t\tflex-direction: column;\r\n\t\theight: 100%;\r\n\t\twidth: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 19.18, 20),\r\n\t\t\tplugRsp(\"tablet\", 20, 22.57),\r\n\t\t\tplugRsp(\"global\", 20, 25)\r\n\t\t)};\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\talign-self: center;\r\n\t\tborder-radius: 25px;\r\n\t`\r\n);\r\n\r\n// mobile: 27.54 - 29.02\r\n// web: 27.54 - 37\r\nconst SlideAnswerSpacer = withEhState(\r\n\tsDimensions,\r\n\tstyled.View`\r\n\t\twidth: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 27, 30),\r\n\t\t\tplugRsp(\"tablet\", 30, 33),\r\n\t\t\tplugRsp(\"global\", 27.54, 37)\r\n\t\t)};\r\n\t`\r\n);\r\n\r\n// w.m: 160-170\r\n// w.g: 160-213\r\nconst AnswerContainer = withEhState(\r\n\tsDimensions,\r\n\tstyled(Animated.View)`\r\n\t\tflex-direction: column-reverse;\r\n\t\twidth: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 160, 170, 160, 170),\r\n\t\t\tplugRsp(\"tablet\", 170, 200, 170, 200),\r\n\t\t\tplugRsp(\"global\", 180, 213)\r\n\t\t)};\r\n\t\theight: 100%;\r\n\t\tjustify-content: space-evenly;\r\n\t\talign-items: center;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: ${makeRsp(\"width\", plugRsp(\"global\", 19, 25))};\r\n\t`\r\n);\r\n\r\n// m.w: 16.11 - 16.78\r\n// g.w: 16.11 - 21\r\nconst SliderButton = withEhState(\r\n\tsDimensions,\r\n\tstyled(Animated.View)`\r\n\t\twidth: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 16, 17),\r\n\t\t\tplugRsp(\"tablet\", 17, 19),\r\n\t\t\tplugRsp(\"global\", 16, 21, 16, 23)\r\n\t\t)};\r\n\t\theight: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 16, 17),\r\n\t\t\tplugRsp(\"tablet\", 17, 19),\r\n\t\t\tplugRsp(\"global\", 16, 21, 16, 23)\r\n\t\t)};\r\n\t\tborder-radius: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 8, 8.5),\r\n\t\t\tplugRsp(\"tablet\", 8.5, 9.5),\r\n\t\t\tplugRsp(\"global\", 8, 10.5, 8, 11.5)\r\n\t\t)};\r\n\t\tbackground-color: #ffffff;\r\n\t`\r\n);\r\n\r\nconst AnswerView = withEhState(\r\n\tsDimensions,\r\n\tstyled(Pressable)`\r\n\t\t/* background-color: ${({ isSelected }) => isSelected} */\r\n\t\twidth: 100%;\r\n\t\theight: ${({ height }) => height};\r\n\t\tjustify-content: center;\r\n\t\tborder-radius: ${makeRsp(\"width\", plugRsp(\"global\", 23, 25))};\r\n\t\tz-index: 1;\r\n\t`\r\n);\r\n\r\n//fontsize.m: 18-20\r\n//fontsize.g: 18-24\r\nconst AnswerText = withEhState(\r\n\tsDimensions,\r\n\tstyled(Animated.Text)`\r\n\t\tfont-family: \"Inter, Helvetica\";\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: ${({ isSelected }) => (isSelected ? 600 : 400)};\r\n\t\tfont-size: ${makeRsp(\"width\", plugRsp(\"global\", 18, 24))};\r\n\t\tline-height: ${makeRsp(\"width\", plugRsp(\"global\", 22, 29))};\r\n\t\ttext-align: center;\r\n\t`\r\n);\r\n\r\nconst BackgroundColorView = withEhState(\r\n\tsDimensions,\r\n\tstyled(Animated.View)`\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: ${({ itemHeightPct }) => itemHeightPct};\r\n\t\t/* background-color: ${({ color }) => color}; */\r\n\t\tz-index: 0;\r\n\t\ttop: ${({ topPos }) => topPos};\r\n\t\tborder-radius: ${makeRsp(\"width\", plugRsp(\"global\", 23, 25))};\r\n\t`\r\n);\r\n\r\nconst shadows = StyleSheet.create({\r\n\tboxShadow: {\r\n\t\tshadowColor: \"rgb(62, 85, 90)\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.1,\r\n\t\tshadowRadius: 8,\r\n\t\televation: 3,\r\n\t},\r\n});\r\n\r\n// Preferred 2 funcs over 1 func with an extra param everywhere\r\nfunction startAnim(anim, toVal, duration) {\r\n\tAnimated.timing(anim, {\r\n\t\ttoValue: toVal,\r\n\t\tduration: duration ? duration : TRANSITION_DELAY,\r\n\t\tuseNativeDriver: false,\r\n\t}).start();\r\n}\r\n\r\nfunction colorSwitch(anim, toVal) {\r\n\tAnimated.timing(anim, {\r\n\t\ttoValue: toVal,\r\n\t\tduration: TRANSITION_DELAY + 200,\r\n\t\tuseNativeDriver: false,\r\n\t}).start();\r\n}\r\n\r\nfunction getCurrentAnswerIndex(choiceVal, totalItemAmt) {\r\n\tif (choiceVal <= 0) return 0;\r\n\tif (choiceVal >= 100) return totalItemAmt - 1;\r\n\tconst ansIndex = Math.ceil(choiceVal / (100 / totalItemAmt)) - 1;\r\n\treturn ansIndex;\r\n}\r\n\r\nfunction buttonLocToAnswer(buttonLoc, boxHeight, margin) {\r\n\tconst val = 50 - (50 / ((boxHeight * margin) / 2)) * buttonLoc;\r\n\tif (val < 0) return 0;\r\n\tif (val > 100) return 100;\r\n\treturn val;\r\n}\r\n\r\nfunction renderAnswerValues(\r\n\tanswerArray,\r\n\tuserAnswer,\r\n\tcurrentColor,\r\n\tslideAnim,\r\n\tcolorAnimInterp,\r\n\tsetCurrButtonLoc,\r\n\tbuttonAnim,\r\n\ttextBoxColorAnimInterp,\r\n\tanswerNumber,\r\n\tanswerBoxHeight\r\n) {\r\n\tif (answerArray.length < 3 || answerArray.length > 7)\r\n\t\treturn console.log(\r\n\t\t\t\"Error! Need between 3 and 7 values, but got: \",\r\n\t\t\tanswerArray.length\r\n\t\t);\r\n\r\n\t// gets the percentage height an item has relative to the view.\r\n\tconst itemHeightPct = `${100 / answerArray.length}%`;\r\n\treturn (\r\n\t\t<AnswerContainer>\r\n\t\t\t{answerArray.map((answer, idx) => (\r\n\t\t\t\t<AnswerView\r\n\t\t\t\t\tkey={idx}\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tconst limit = (answerBoxHeight * SLIDER_MOVEMENT_MARGIN) / 2;\r\n\t\t\t\t\t\tconst newButtonLoc =\r\n\t\t\t\t\t\t\t(-(idx * ((limit * 2) / answerArray.length)) +\r\n\t\t\t\t\t\t\t\tlimit -\r\n\t\t\t\t\t\t\t\tlimit / answerArray.length) *\r\n\t\t\t\t\t\t\t(1 - SLIDER_MOVEMENT_MARGIN + 1);\r\n\t\t\t\t\t\tsetCurrButtonLoc(newButtonLoc);\r\n\t\t\t\t\t\tstartAnim(buttonAnim, newButtonLoc);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t/* isSelected can be shortened to just {currentColor}, but I fear it might be less\r\n            robust. Just a gut feeling. */\r\n\t\t\t\t\tisSelected={currentColor}\r\n\t\t\t\t\theight={itemHeightPct}\r\n\t\t\t\t>\r\n\t\t\t\t\t<AnswerText\r\n\t\t\t\t\t\t/* Setting of color must be done inline. */\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tcolor: answerNumber === idx ? colorAnimInterp : \"rgb(47, 70, 75)\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{answer}\r\n\t\t\t\t\t</AnswerText>\r\n\t\t\t\t</AnswerView>\r\n\t\t\t))}\r\n\t\t\t{/* Background for the text. This one DOES have to be absolute. Since the items\r\n        are laid out in an evenly spaced manner, 1 item's height = totalHeight / # of items.\r\n        This allows for a consistent animation, regardless of # of answer vals.  */}\r\n\t\t\t<BackgroundColorView\r\n\t\t\t\titemHeightPct={itemHeightPct}\r\n\t\t\t\ttopPos={0}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: textBoxColorAnimInterp,\r\n\t\t\t\t\ttransform: [{ translateY: slideAnim }],\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</AnswerContainer>\r\n\t);\r\n}\r\n\r\n// METHOD FOR GETTING RGB VALUES SEPARATELY TO MANUALLY INTERPOLATE:\r\n// var rgb = 'rgb(200, 12, 53)';\r\n// rgb = rgb.replace(/[^\\d,]/g, '').split(',');\r\n// console.log(rgb);\r\nfunction getInterpolatedColor(color_1, color_2, interp) {\r\n\tconst colorInterpolator = interpolateRgb(color_1, color_2);\r\n\treturn colorInterpolator(interp);\r\n}\r\n\r\nexport default function VerticalAnswerSlider({ answerArray }) {\r\n\t// currButtonLoc ranges from - to + component height * margin / 2.\r\n\tconst [currButtonLoc, setCurrButtonLoc] = useState(0);\r\n\r\n\t// currButtonLoc is converted to user's choice on a scale of 0-100\r\n\t// by inverting the value (*-1), incrementing currButtonLoc\r\n\t// by 100 and then dividing by 2 in a useEffect.\r\n\t// Initial state is 50 since it is the center value, which is where the button starts.\r\n\tconst [userAnswer, setUserAnswer] = useState(50);\r\n\t// Base color starts at the middle as well, so the center color.\r\n\tconst [currentColor, setCurrentColor] = useState(GRADIENT_COLOR_2);\r\n\t// AnswerBox is instantiated with a non-zero value, and then immediately updated to\r\n\t// reflect the answer box's height once it is rendered.\r\n\tconst [answerBoxHeight, setAnswerBoxHeight] = useState(1);\r\n\t// Sets the currently selected answer as an index val between 0 and arr.length-1.\r\n\tconst [answerNumber, setAnswerNumber] = useState(\r\n\t\tgetCurrentAnswerIndex(userAnswer, answerArray.length)\r\n\t);\r\n\t// Sets the color of the colored box around the Answer Text values\r\n\tconst textBoxColorAnim = useRef(new Animated.Value(0.5)).current;\r\n\tconst textBoxColorAnimInterp = textBoxColorAnim.interpolate({\r\n\t\tinputRange: [0, 0.5, 1],\r\n\t\toutputRange: [GRADIENT_COLOR_1, GRADIENT_COLOR_2, GRADIENT_COLOR_3],\r\n\t});\r\n\t// Sets the color of the currently selected text\r\n\tconst colorAnim = useRef(new Animated.Value(0)).current;\r\n\tconst colorAnimInterp = colorAnim.interpolate({\r\n\t\tinputRange: [0, 1],\r\n\t\toutputRange: [\"rgb(47, 70, 75)\", \"rgb(255, 255, 255)\"],\r\n\t});\r\n\t// slideAnim handles the location of the colored box around the Answer Text values\r\n\tconst slideAnim = useRef(new Animated.Value(100)).current;\r\n\t// buttonAnim handles the location of the button inside the slider.\r\n\tconst buttonAnim = useRef(new Animated.Value(0)).current;\r\n\t// gestureOffset must be an object because updating it inside the panResponder\r\n\t// leads to issue if it's created as a State.\r\n\t// UPDATE: should be able to change it to a state now, if preferred.\r\n\tconst gestureOffset = { y: 0 };\r\n\r\n\tuseEffect(() => {\r\n\t\tgestureOffset.y = currButtonLoc;\r\n\t\t// Set current answer value (0-100) based on button location.\r\n\t\t// Current buttonLoc range: [-90, 90].\r\n\t\tsetUserAnswer(\r\n\t\t\tbuttonLocToAnswer(currButtonLoc, answerBoxHeight, SLIDER_MOVEMENT_MARGIN)\r\n\t\t);\r\n\t\t// Check if the new answer value changes the selection item, so that\r\n\t\t// A text color change can trigger on change.\r\n\t\tsetAnswerNumber(getCurrentAnswerIndex(userAnswer, answerArray.length));\r\n\t\tsetCurrentColor(\r\n\t\t\tuserAnswer < 50\r\n\t\t\t\t? getInterpolatedColor(\r\n\t\t\t\t\t\tGRADIENT_COLOR_3,\r\n\t\t\t\t\t\tGRADIENT_COLOR_2,\r\n\t\t\t\t\t\tuserAnswer / 50\r\n\t\t\t\t  )\r\n\t\t\t\t: getInterpolatedColor(\r\n\t\t\t\t\t\tGRADIENT_COLOR_2,\r\n\t\t\t\t\t\tGRADIENT_COLOR_1,\r\n\t\t\t\t\t\tuserAnswer / 50 - 1\r\n\t\t\t\t  )\r\n\t\t);\r\n\t\t// Update the offset in case the user clicked on a text answer.\r\n\t\tgestureOffset.y = currButtonLoc;\r\n\t\t// Animation to change the colored box's color around text answers.\r\n\t\tstartAnim(textBoxColorAnim, -(userAnswer - 100) / 100);\r\n\t\t// Animation to move the colored box around text answers.\r\n\t\tstartAnim(\r\n\t\t\tslideAnim,\r\n\t\t\tgetCurrentAnswerIndex((userAnswer - 100) * -1, answerArray.length) *\r\n\t\t\t\t(answerBoxHeight / answerArray.length)\r\n\t\t);\r\n\t}, [currButtonLoc, userAnswer, answerBoxHeight]);\r\n\r\n\tuseEffect(() => {\r\n\t\tcolorAnim.setValue(0);\r\n\t\tcolorSwitch(colorAnim, 1);\r\n\t}, [answerNumber, answerBoxHeight, colorAnim]);\r\n\r\n\tconst panResponder = useMemo(\r\n\t\t() =>\r\n\t\t\tPanResponder.create({\r\n\t\t\t\t// Ask to be the responder:\r\n\t\t\t\tonStartShouldSetPanResponder: (evt, gestureState) => true,\r\n\t\t\t\tonStartShouldSetPanResponderCapture: (evt, gestureState) => true,\r\n\t\t\t\tonMoveShouldSetPanResponder: (evt, gestureState) => true,\r\n\t\t\t\tonMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\r\n\r\n\t\t\t\tonPanResponderGrant: (evt, gestureState) => {\r\n\t\t\t\t\t// The gesture has started. Show visual feedback so the user knows\r\n\t\t\t\t\t// what is happening!\r\n\t\t\t\t\t// gestureState.d{x,y} will be set to zero now\r\n\t\t\t\t},\r\n\t\t\t\tonPanResponderMove: (evt, gestureState) => {\r\n\t\t\t\t\t// The most recent move distance is gestureState.move{X,Y}\r\n\t\t\t\t\t// The accumulated gesture distance since becoming responder is\r\n\t\t\t\t\t// gestureState.d{x,y}\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tgestureState.dy + gestureOffset.y >=\r\n\t\t\t\t\t\t\t-(0.5 * answerBoxHeight * SLIDER_MOVEMENT_MARGIN) &&\r\n\t\t\t\t\t\tgestureState.dy + gestureOffset.y <=\r\n\t\t\t\t\t\t\t0.5 * answerBoxHeight * SLIDER_MOVEMENT_MARGIN\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tbuttonAnim.setValue(gestureOffset.y + gestureState.dy);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonPanResponderTerminationRequest: (evt, gestureState) => true,\r\n\t\t\t\tonPanResponderRelease: (evt, gestureState) => {\r\n\t\t\t\t\t// The user has released all touches while this view is the\r\n\t\t\t\t\t// responder. This typically means a gesture has succeeded\r\n\t\t\t\t\tlet limit = 0.5 * answerBoxHeight * SLIDER_MOVEMENT_MARGIN;\r\n\r\n\t\t\t\t\t// \"Snaps\" the slider button to the limit value if the button is within a certain\r\n\t\t\t\t\t// percentage of its max-min.\r\n\t\t\t\t\tlet snapVal = 1.05;\r\n\t\t\t\t\tlet totalOffset = gestureState.dy + gestureOffset.y;\r\n\t\t\t\t\tif (totalOffset * snapVal < -limit) {\r\n\t\t\t\t\t\tif (!(totalOffset < -limit)) {\r\n\t\t\t\t\t\t\tbuttonAnim.setValue(-limit);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgestureOffset.y = -limit;\r\n\t\t\t\t\t\tsetCurrButtonLoc(-limit);\r\n\t\t\t\t\t} else if (totalOffset * snapVal > limit) {\r\n\t\t\t\t\t\tif (!(totalOffset > limit)) {\r\n\t\t\t\t\t\t\tbuttonAnim.setValue(limit);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgestureOffset.y = limit;\r\n\t\t\t\t\t\tsetCurrButtonLoc(limit);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet tempOffset =\r\n\t\t\t\t\t\t\ttotalOffset * snapVal > limit\r\n\t\t\t\t\t\t\t\t? limit\r\n\t\t\t\t\t\t\t\t: totalOffset * snapVal < -limit\r\n\t\t\t\t\t\t\t\t? -limit\r\n\t\t\t\t\t\t\t\t: totalOffset;\r\n\t\t\t\t\t\tgestureOffset.y = tempOffset;\r\n\t\t\t\t\t\tsetCurrButtonLoc(tempOffset);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonPanResponderTerminate: (evt, gestureState) => {\r\n\t\t\t\t\t// Another component has become the responder, so this gesture\r\n\t\t\t\t\t// should be cancelled\r\n\t\t\t\t},\r\n\t\t\t\tonShouldBlockNativeResponder: (evt, gestureState) => {\r\n\t\t\t\t\t// Returns whether this component should block native components from becoming the JS\r\n\t\t\t\t\t// responder. Returns true by default. Is currently only supported on android.\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t[currButtonLoc, answerBoxHeight]\r\n\t);\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<GradientSliderView\r\n\t\t\t\tcolors={[GRADIENT_COLOR_1, GRADIENT_COLOR_2, GRADIENT_COLOR_3]}\r\n\t\t\t\tlocations={[0, 0.4964, 0.9929]}\r\n\t\t\t>\r\n\t\t\t\t<SliderButton\r\n\t\t\t\t\tstyle={{ transform: [{ translateY: buttonAnim }] }}\r\n\t\t\t\t\t{...panResponder.panHandlers}\r\n\t\t\t\t/>\r\n\t\t\t</GradientSliderView>\r\n\t\t\t<SlideAnswerSpacer />\r\n\t\t\t<AnswerContainer\r\n\t\t\t\tstyle={shadows.boxShadow}\r\n\t\t\t\tonLayout={(e) => {\r\n\t\t\t\t\tsetAnswerBoxHeight(e.nativeEvent.layout.height);\r\n\r\n\t\t\t\t\tslideAnim.setValue(\r\n\t\t\t\t\t\t(answerBoxHeight / answerArray.length) *\r\n\t\t\t\t\t\t\t(getCurrentAnswerIndex(userAnswer, answerArray.length) - 1)\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{renderAnswerValues(\r\n\t\t\t\t\tanswerArray,\r\n\t\t\t\t\tuserAnswer,\r\n\t\t\t\t\tcurrentColor,\r\n\t\t\t\t\tslideAnim,\r\n\t\t\t\t\tcolorAnimInterp,\r\n\t\t\t\t\tsetCurrButtonLoc,\r\n\t\t\t\t\tbuttonAnim,\r\n\t\t\t\t\ttextBoxColorAnimInterp,\r\n\t\t\t\t\tanswerNumber,\r\n\t\t\t\t\tanswerBoxHeight\r\n\t\t\t\t)}\r\n\t\t\t</AnswerContainer>\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n\tborder: 2px solid;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tpadding-bottom: 8px;\r\n\tbackground-color: #d3d3d3;\r\n\tborder-radius: 6px;\r\n\tmargin-bottom: 24px;\r\n\twidth: 50%;\r\n\theight: auto;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n\twidth: 100%;\r\n\tborder-bottom: 1px solid;\r\n`;\r\n\r\nconst ContainerTitle = styled.h2`\r\n\ttext-align: left;\r\n\tmargin-left: 8px;\r\n`;\r\n\r\nexport default function ComponentContainer({ title, children }) {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<TitleContainer>\r\n\t\t\t\t<ContainerTitle>{title}</ContainerTitle>\r\n\t\t\t</TitleContainer>\r\n\t\t\t{children}\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport Svg, { Path, G, Polygon, Rect, Circle, Text } from \"react-native-svg\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CustText = styled(Text)`\r\n\tfont-size: 40px;\r\n`;\r\n\r\nexport const ProfileSvg = ({ size }) => {\r\n\treturn (\r\n\t\t<Svg\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\theight={size}\r\n\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\twidth={size}\r\n\t\t\tfill=\"#000000\"\r\n\t\t>\r\n\t\t\t<Path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n\t\t\t<Path d=\"M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z\" />\r\n\t\t</Svg>\r\n\t);\r\n};\r\n\r\nexport const ScanSvg = ({ color, width, height }) => {\r\n\treturn (\r\n\t\t<Svg\r\n\t\t\tviewBox=\"0 0 1600 1600\"\r\n\t\t\tfill={color}\r\n\t\t\twidth={width || \"52px\"}\r\n\t\t\theight={height || \"52px\"}\r\n\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\r\n\t\t>\r\n\t\t\t<G\r\n\t\t\t\ttransform=\"translate(0.000000,1600.000000) scale(0.100000,-0.100000)\"\r\n\t\t\t\tfill={color}\r\n\t\t\t\tstroke=\"none\"\r\n\t\t\t>\r\n\t\t\t\t<Path d=\"M2697 15989 c-565 -50 -1108 -264 -1567 -619 -114 -88 -391 -362 -484 -480 -164 -206 -340 -509 -434 -745 -84 -211 -143 -430 -184 -680 l-23 -140 -3 -5105 c-2 -3709 0 -5145 8 -5250 70 -905 549 -1724 1304 -2229 357 -239 778 -402 1203 -466 209 -32 404 -36 1438 -33 l1030 3 -50 29 c-473 272 -900 980 -1135 1880 -136 521 -200 952 -262 1766 -9 116 -13 1563 -15 5719 l-3 5564 59 -54 c33 -30 1450 -1433 3150 -3119 l3091 -3065 0 -960 0 -960 -167 166 c-276 272 -3662 3637 -4288 4261 l-580 578 -3 -3028 c-3 -3056 0 -3387 34 -3957 76 -1289 257 -2251 558 -2968 58 -138 195 -404 271 -527 156 -251 434 -560 648 -719 357 -266 779 -449 1320 -571 l177 -41 2633 4 c2894 3 2667 -2 2983 62 961 194 1787 893 2148 1816 86 221 140 430 183 709 16 108 18 413 21 5185 2 3454 0 5117 -8 5217 -19 278 -61 490 -144 743 -374 1126 -1377 1914 -2561 2015 -72 6 -555 10 -1200 10 l-1080 0 58 -33 c100 -56 179 -119 297 -237 465 -463 808 -1273 979 -2310 54 -329 89 -654 123 -1145 8 -125 12 -1627 15 -5704 l4 -5533 -39 33 c-22 19 -1074 1060 -2338 2314 -1264 1254 -2665 2642 -3111 3085 l-813 805 0 964 0 963 1853 -1843 c1018 -1014 2152 -2143 2520 -2508 l667 -665 0 3025 c0 1749 -4 3153 -10 3329 -57 1794 -274 2992 -695 3838 -153 308 -311 536 -525 756 -221 227 -441 386 -735 531 -266 131 -536 223 -883 301 l-154 34 -2596 -1 c-1429 -1 -2636 -5 -2685 -10z\" />\r\n\t\t\t</G>\r\n\t\t</Svg>\r\n\t);\r\n};\r\n\r\nexport const HomeSvg = ({ color }) => {\r\n\treturn (\r\n\t\t<Svg viewBox=\"0 0 24 24\" fill={color} width=\"42px\" height=\"42px\">\r\n\t\t\t<Path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n\t\t\t<Path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-1c0-2.66-5.33-4-8-4z\" />\r\n\t\t</Svg>\r\n\t);\r\n};\r\n\r\nexport const LocationSvg = ({ color }) => {\r\n\treturn (\r\n\t\t<Svg viewBox=\"0 0 24 24\" fill={color} width=\"42px\" height=\"42px\">\r\n\t\t\t<Path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n\t\t\t<Path d=\"M12 2C8.13 2 5 5.13 5 9c0 4.17 4.42 9.92 6.24 12.11.4.48 1.13.48 1.53 0C14.58 18.92 19 13.17 19 9c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\" />\r\n\t\t</Svg>\r\n\t);\r\n};\r\n\r\nexport const BellSvg = ({ color }) => {\r\n\treturn (\r\n\t\t<Svg viewBox=\"0 0 24 24\" fill={color} width=\"42px\" height=\"42px\">\r\n\t\t\t<Path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n\t\t\t<Path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-1.29 1.29c-.63.63-.19 1.71.7 1.71h13.17c.89 0 1.34-1.08.71-1.71L18 16z\" />\r\n\t\t</Svg>\r\n\t);\r\n};\r\n\r\nexport const CogSvg = ({ color }) => {\r\n\treturn (\r\n\t\t<Svg viewBox=\"0 0 24 24\" fill={color} width=\"42px\" height=\"42px\">\r\n\t\t\t<Path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n\t\t\t<Path d=\"M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z\" />\r\n\t\t</Svg>\r\n\t);\r\n};\r\n\r\nexport const FavoritesSvg = ({ color }) => {\r\n\treturn (\r\n\t\t<Svg fill={color} height=\"46px\" width=\"46px\" viewBox=\"0 0 24 24\">\r\n\t\t\t<G>\r\n\t\t\t\t<G>\r\n\t\t\t\t\t<Path d=\"M0,0h24v24H0V0z\" fill=\"none\" />\r\n\t\t\t\t\t<Path d=\"M0,0h24v24H0V0z\" fill=\"none\" />\r\n\t\t\t\t</G>\r\n\t\t\t</G>\r\n\t\t\t<G>\r\n\t\t\t\t<Path d=\"M14.43,10l-1.47-4.84c-0.29-0.95-1.63-0.95-1.91,0L9.57,10H5.12c-0.97,0-1.37,1.25-0.58,1.81l3.64,2.6l-1.43,4.61 c-0.29,0.93,0.79,1.68,1.56,1.09L12,17.31l3.69,2.81c0.77,0.59,1.85-0.16,1.56-1.09l-1.43-4.61l3.64-2.6 c0.79-0.57,0.39-1.81-0.58-1.81H14.43z\" />\r\n\t\t\t</G>\r\n\t\t</Svg>\r\n\t);\r\n};\r\n\r\nexport const CelebrateSvg = ({ color, size }) => {\r\n\treturn (\r\n\t\t<Svg\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\tenable-background=\"new 0 0 24 24\"\r\n\t\t\theight={size}\r\n\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\twidth={size}\r\n\t\t\tfill={color}\r\n\t\t>\r\n\t\t\t<G>\r\n\t\t\t\t<Rect fill=\"none\" height=\"24\" width=\"24\" />\r\n\t\t\t</G>\r\n\t\t\t<G>\r\n\t\t\t\t<G>\r\n\t\t\t\t\t<Polygon points=\"2,22 16,17 7,8\" />\r\n\t\t\t\t\t<Path d=\"M14.53,12.53l5.59-5.59c0.49-0.49,1.28-0.49,1.77,0l0.59,0.59l1.06-1.06l-0.59-0.59c-1.07-1.07-2.82-1.07-3.89,0 l-5.59,5.59L14.53,12.53z\" />\r\n\t\t\t\t\t<Path d=\"M10.06,6.88L9.47,7.47l1.06,1.06l0.59-0.59c1.07-1.07,1.07-2.82,0-3.89l-0.59-0.59L9.47,4.53l0.59,0.59 C10.54,5.6,10.54,6.4,10.06,6.88z\" />\r\n\t\t\t\t\t<Path d=\"M17.06,11.88l-1.59,1.59l1.06,1.06l1.59-1.59c0.49-0.49,1.28-0.49,1.77,0l1.61,1.61l1.06-1.06l-1.61-1.61 C19.87,10.81,18.13,10.81,17.06,11.88z\" />\r\n\t\t\t\t\t<Path d=\"M15.06,5.88l-3.59,3.59l1.06,1.06l3.59-3.59c1.07-1.07,1.07-2.82,0-3.89l-1.59-1.59l-1.06,1.06l1.59,1.59 C15.54,4.6,15.54,5.4,15.06,5.88z\" />\r\n\t\t\t\t</G>\r\n\t\t\t</G>\r\n\t\t</Svg>\r\n\t);\r\n};\r\n\r\nexport const PhoneSvg = ({ size = \"32px\", color = \"pink\" }) => (\r\n\t<Svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\theight={size}\r\n\t\twidth={size}\r\n\t\tviewBox=\"0 0 24 24\"\r\n\t\tfill={color}\r\n\t>\r\n\t\t<Path d=\"M5 4 h12 v18 H6 z\" fill=\"white\" />\r\n\t\t<Path\r\n\t\t\tfill={color}\r\n\t\t\td=\"M15.5 1h-8C6.12 1 5 2.12 5 3.5v17C5 21.88 6.12 23 7.5 23h8c1.38 0 2.5-1.12 2.5-2.5v-17C18 2.12 16.88 1 15.5 1zm-4 21c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5-4H7V4h9v14z\"\r\n\t\t/>\r\n\t</Svg>\r\n);\r\n\r\nexport const TagSvg = ({ size = 32, color = \"pink\" }) => (\r\n\t<Svg height={size} width={size}>\r\n\t\t<Circle cx={size / 2} cy={size / 2} r={size / 2} fill={color}></Circle>\r\n\t\t<Text\r\n\t\t\tfill=\"white\"\r\n\t\t\tstroke=\"white\"\r\n\t\t\tfontSize=\"32\"\r\n\t\t\tfontWeight=\"bold\"\r\n\t\t\tfontFamily=\"Bukhari Script\"\r\n\t\t\tx={size / 2}\r\n\t\t\ty={size / 2 + 10}\r\n\t\t\ttextAnchor=\"middle\"\r\n\t\t>\r\n\t\t\tR\r\n\t\t</Text>\r\n\t</Svg>\r\n);\r\n\r\nexport const CardSvg = ({ size = 32, color = \"pink\" }) => (\r\n\t<View\r\n\t\tstyle={{\r\n\t\t\twidth: size,\r\n\t\t\theight: size * 1.5,\r\n\t\t\toverflow: \"hidden\",\r\n\t\t\tborderRadius: 8,\r\n\t\t}}\r\n\t>\r\n\t\t<Svg height={size * 2} width={size}>\r\n\t\t\t<Rect height={size * 2} width={size} x={0} y={0} fill={color} />\r\n\t\t\t<CustText\r\n\t\t\t\tfill=\"white\"\r\n\t\t\t\tstroke=\"white\"\r\n\t\t\t\tfontSize=\"32\"\r\n\t\t\t\tfontWeight=\"bold\"\r\n\t\t\t\tfontFamily=\"Bukhari Script\"\r\n\t\t\t\tx={size / 2}\r\n\t\t\t\ty={size * 0.9}\r\n\t\t\t\ttextAnchor=\"middle\"\r\n\t\t\t>\r\n\t\t\t\tR\r\n\t\t\t</CustText>\r\n\t\t</Svg>\r\n\t</View>\r\n);\r\n\r\nexport const CheckmarkSvg = ({ size = 120, color = \"pink\" }) => (\r\n\t<Svg\r\n\t\theight={size}\r\n\t\tviewBox=\"0 0 512 512\"\r\n\t\twidth={size}\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t>\r\n\t\t<Path\r\n\t\t\tfill={color}\r\n\t\t\td=\"m256 0c-141.164062 0-256 114.835938-256 256s114.835938 256 256 256 256-114.835938 256-256-114.835938-256-256-256zm0 0\"\r\n\t\t/>\r\n\t\t<Path\r\n\t\t\tfill=\"#fafafa\"\r\n\t\t\td=\"m385.75 201.75-138.667969 138.664062c-4.160156 4.160157-9.621093 6.253907-15.082031 6.253907s-10.921875-2.09375-15.082031-6.253907l-69.332031-69.332031c-8.34375-8.339843-8.34375-21.824219 0-30.164062 8.339843-8.34375 21.820312-8.34375 30.164062 0l54.25 54.25 123.585938-123.582031c8.339843-8.34375 21.820312-8.34375 30.164062 0 8.339844 8.339843 8.339844 21.820312 0 30.164062zm0 0\"\r\n\t\t/>\r\n\t</Svg>\r\n);\r\n\r\nexport const FailSvg = ({ size = 120, color = \"pink\" }) => (\r\n\t<Svg\r\n\t\theight={size}\r\n\t\tviewBox=\"0 0 512 512\"\r\n\t\twidth={size}\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t>\r\n\t\t<Path\r\n\t\t\tfill={color}\r\n\t\t\td=\"m256 0c-141.164062 0-256 114.835938-256 256s114.835938 256 256 256 256-114.835938 256-256-114.835938-256-256-256zm0 0\"\r\n\t\t/>\r\n\t\t<Path\r\n\t\t\tfill=\"#fafafa\"\r\n\t\t\td=\"m350.273438 320.105469c8.339843 8.34375 8.339843 21.824219 0 30.167969-4.160157 4.160156-9.621094 6.25-15.085938 6.25-5.460938 0-10.921875-2.089844-15.082031-6.25l-64.105469-64.109376-64.105469 64.109376c-4.160156 4.160156-9.621093 6.25-15.082031 6.25-5.464844 0-10.925781-2.089844-15.085938-6.25-8.339843-8.34375-8.339843-21.824219 0-30.167969l64.109376-64.105469-64.109376-64.105469c-8.339843-8.34375-8.339843-21.824219 0-30.167969 8.34375-8.339843 21.824219-8.339843 30.167969 0l64.105469 64.109376 64.105469-64.109376c8.34375-8.339843 21.824219-8.339843 30.167969 0 8.339843 8.34375 8.339843 21.824219 0 30.167969l-64.109376 64.105469zm0 0\"\r\n\t\t/>\r\n\t</Svg>\r\n);\r\n","import { withEhState } from \"@foursk/eh-react-hooks\";\r\nimport { Animated, Easing, Linking, Platform } from \"react-native\";\r\n\r\n/**\r\n *\r\n * @param {boolean} boolVal\r\n */\r\nexport const NOT = (boolVal) => !boolVal;\r\n\r\nexport const CURRENCIES = (currency) => {\r\n\tswitch (currency) {\r\n\t\tcase \"ILS\":\r\n\t\tdefault:\r\n\t\t\treturn \"₪\";\r\n\t\tcase \"EUR\":\r\n\t\t\treturn \"€\";\r\n\t\tcase \"USD\":\r\n\t\t\treturn \"$\";\r\n\t}\r\n};\r\n\r\nexport function openPhone(phone_number) {\r\n\tif (!phone_number) return null;\r\n\tconst temp_number = Platform.select({\r\n\t\tios: `telprompt:${phone_number}`,\r\n\t\tandroid: `tel:${phone_number}`,\r\n\t\tdefault: `tel:${phone_number}`,\r\n\t});\r\n\tLinking.openURL(temp_number);\r\n}\r\n\r\nexport function openMap(lat, long) {\r\n\tconst scheme = Platform.select({ ios: \"maps:0,0?q=\", android: \"geo:0,0?q=\" });\r\n\tconst latLng = `${lat},${long}`;\r\n\tconst label = \"label here\";\r\n\tconst url = Platform.select({\r\n\t\tios: `${scheme}${label}@${latLng}`,\r\n\t\tandroid: `${scheme}${latLng}(${label})`,\r\n\t});\r\n\tLinking.openURL(url);\r\n}\r\n\r\nexport const getCurrentDay = () => new Date().getDay();\r\nexport const DAY_ARRAY = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\nexport const getCurrentDayStr = () => DAY_ARRAY[getCurrentDay()];\r\n\r\nexport function getDayData(data) {\r\n\tif (!data) return null;\r\n\treturn [data.find((x) => (x.start_day = DAY_ARRAY[getCurrentDay()]))];\r\n}\r\n\r\nexport function getTodaysOpeningTimes(opening_times) {\r\n\tconst { open_time, close_time } = opening_times[getCurrentDay()];\r\n\tconst returns = { open_time, close_time };\r\n\tObject.entries(returns).forEach(\r\n\t\t([key, val]) => (returns[key] = val.substring(0, 5))\r\n\t);\r\n\treturn returns;\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {T} comp\r\n * @param  {...any} ehStates\r\n * @returns {T}\r\n */\r\nexport function withEhStates(comp, ...ehStates) {\r\n\tlet withed = comp;\r\n\tehStates.forEach((ehstate) => (withed = withEhState(ehstate, withed)));\r\n\treturn withed;\r\n}\r\n\r\nexport const isHexValid = (str) => {\r\n\tconst legend = \"0123456789ABCDEF\";\r\n\tfor (let i = 0; i < str.length; i++) {\r\n\t\tif (legend.includes(str[i])) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\n/**\r\n * @template T\r\n * @param {T[]} list\r\n * @param {string} mapBy\r\n * @returns {{[key: string]: T}}\r\n */\r\nexport function objectify(list, mapBy) {\r\n\treturn Object.assign({}, ...list.map((e) => ({ [e[mapBy]]: e })));\r\n}\r\n\r\nfunction byteToHex(byte) {\r\n\treturn (\"0\" + (byte & 0xff).toString(16)).slice(-2);\r\n}\r\n\r\nexport function toHexString(byteArray) {\r\n\treturn Array.from(byteArray, byteToHex).join(\"\");\r\n}\r\n\r\nexport function timedAnimation(anim, toVal, dur, easing) {\r\n\treturn Animated.timing(anim, {\r\n\t\ttoValue: toVal,\r\n\t\tduration: dur,\r\n\t\tuseNativeDriver: true,\r\n\t\teasing: easing ? Easing.linear : Easing.inOut(Easing.ease),\r\n\t});\r\n}\r\n\r\nexport function gradientLooper(anim, toVal, dur) {\r\n\ttimedAnimation(anim, -toVal, dur, true).start(() => {\r\n\t\tanim.setValue(0);\r\n\t\tgradientLooper(anim, toVal, dur);\r\n\t});\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { CardSvg, PhoneSvg, TagSvg } from \"../lib/svgs\";\r\nimport styled from \"styled-components\";\r\nimport { useEhState } from \"@foursk/eh-react-hooks\";\r\nimport { sTheme } from \"../lib/theme\";\r\nimport { timedAnimation, withEhStates } from \"../lib/utils\";\r\nimport { sDimensions } from \"../style/responsive\";\r\nimport { Animated } from \"react-native\";\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`;\r\n\r\n// Have to avoid ph due to anim\r\nconst Spacer = withEhStates(\r\n\tstyled.div`\r\n\t\theight: 16px;\r\n\t`,\r\n\tsDimensions\r\n);\r\n\r\nexport const TagScanAnimation = () => {\r\n\tconst { theme } = useEhState(sTheme);\r\n\tconst phoneAnim = useRef(new Animated.Value(0)).current;\r\n\tconst phoneAnimInterp = phoneAnim.interpolate({\r\n\t\tinputRange: [0, 1],\r\n\t\toutputRange: [0, -170],\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tAnimated.loop(\r\n\t\t\tAnimated.sequence([\r\n\t\t\t\ttimedAnimation(phoneAnim, 1, 2250),\r\n\t\t\t\ttimedAnimation(phoneAnim, 1, 750),\r\n\t\t\t\ttimedAnimation(phoneAnim, 0, 2250),\r\n\t\t\t\ttimedAnimation(phoneAnim, 0, 750),\r\n\t\t\t])\r\n\t\t).start();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Spacer />\r\n\t\t\t<CardSvg size={100} color=\"#f52d56\" />\r\n\t\t\t<Spacer />\r\n\t\t\t<Animated.View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tzIndex: 5,\r\n\t\t\t\t\tmarginLeft: 10,\r\n\t\t\t\t\ttransform: [{ translateY: phoneAnimInterp }],\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<PhoneSvg size={200} color={theme.colors.aBlack} />\r\n\t\t\t</Animated.View>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { withEhStates } from \"../lib/utils\";\r\nimport { sTheme } from \"../lib/theme\";\r\nimport styled from \"styled-components\";\r\nimport { sDimensions } from \"../style/responsive\";\r\nimport { Animated } from \"react-native\";\r\n// import { h2 } from '../style/theme';\r\n\r\nconst LoadElement = withEhStates(\r\n\tstyled(Animated.View)`\r\n\t\tmargin-top: ${({ marginTop }) => marginTop || \"8px\"};\r\n\t\t/* padding-top: ${({ paddingTop }) => paddingTop || \"0px\"}; */\r\n\t\tbackground-color: blue;\r\n\t\twidth: ${({ width }) => width || \"auto\"};\r\n\t\theight: ${({ height }) => (height ? height : \"auto\")};\r\n\t\tmargin-bottom: ${({ marginBottom }) =>\r\n\t\t\tmarginBottom ? marginBottom : \"0px\"};\r\n\t\tmargin-right: ${({ marginRight }) => (marginRight ? marginRight : \"0px\")};\r\n\t\talign-self: ${({ alignSelf }) => alignSelf || \"flex-start\"};\r\n\t`,\r\n\tsTheme,\r\n\tsDimensions\r\n);\r\n\r\nfunction animationHandler(anim, from, to) {\r\n\treturn Animated.loop(\r\n\t\tAnimated.sequence([\r\n\t\t\tAnimated.timing(anim, {\r\n\t\t\t\ttoValue: from,\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\tuseNativeDriver: true,\r\n\t\t\t}),\r\n\t\t\tAnimated.timing(anim, {\r\n\t\t\t\ttoValue: to,\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\tuseNativeDriver: true,\r\n\t\t\t}),\r\n\t\t])\r\n\t);\r\n}\r\n\r\nexport function LoadingElement({\r\n\tmarginTop,\r\n\tpaddingTop,\r\n\twidth,\r\n\theight,\r\n\tmarginBottom,\r\n\tmarginRight,\r\n\talignSelf,\r\n\tchildren,\r\n\thasValue,\r\n}) {\r\n\tconst pulseAnim = useRef(new Animated.Value(0.6)).current;\r\n\r\n\tuseEffect(() => {\r\n\t\tanimationHandler(pulseAnim, 0.2, 0.6).start();\r\n\t}, []);\r\n\r\n\tif (hasValue) {\r\n\t\treturn children;\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<LoadElement\r\n\t\t\t\tmarginTop={marginTop}\r\n\t\t\t\tpaddingTop={paddingTop}\r\n\t\t\t\twidth={width}\r\n\t\t\t\theight={height}\r\n\t\t\t\tmarginBottom={marginBottom}\r\n\t\t\t\tmarginRight={marginRight}\r\n\t\t\t\talignSelf={alignSelf}\r\n\t\t\t\tstyle={{ opacity: pulseAnim }}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</LoadElement>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport const LoadingStoreDataElement = styled.div`\r\n\twidth: 100%;\r\n\theight: auto;\r\n\tbackground-color: #ffbdcb;\r\n`;\r\n\r\nconst LoadCardContainer = withEhStates(\r\n\tstyled.div`\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: space-between;\r\n\t\tpadding-horizontal: 20px;\r\n\t\twidth: 100%;\r\n\t\tmargin-top: 16px;\r\n\t`\r\n);\r\n\r\nconst LoadCard = withEhStates(\r\n\tstyled(Animated.View)`\r\n\t\twidth: ${({ pw }) => pw(91)};\r\n\t\tmax-width: 350px;\r\n\t\theight: ${({ isPortrait, pw, ph }) => pw(60)};\r\n\t\tmax-height: 450px;\r\n\t\tbackground-color: rgb(210, 210, 210);\r\n\t\t/* margin-horizontal: 10%; */\r\n\t\tmargin-vertical: 10%;\r\n\t`,\r\n\tsDimensions,\r\n\tsTheme\r\n);\r\n\r\nconst LoadingFeaturedText = withEhStates(\r\n\tstyled.h2`\r\n\t\tfont-weight: 600;\r\n\t\tfont-family: ${({ theme }) => theme.colors.font};\r\n\t\tcolor: ${({ theme }) => theme.colors.aBlack};\r\n\t`,\r\n\tsTheme\r\n);\r\n\r\nexport function LoadingCard({ qpie }) {\r\n\tconst pulseAnim = useRef(new Animated.Value(0.6)).current;\r\n\r\n\tuseEffect(() => {\r\n\t\tanimationHandler(pulseAnim, 0.2, 0.6).start();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<LoadCardContainer>\r\n\t\t\t<LoadingFeaturedText>Featured Items</LoadingFeaturedText>\r\n\t\t\t<LoadCard style={{ opacity: pulseAnim }} />\r\n\t\t</LoadCardContainer>\r\n\t);\r\n}\r\n","import styled from \"styled-components\";\r\nimport { ProfileSvg } from \"../lib/svgs\";\r\nimport { LoadingElement } from \"./LoadingElement\";\r\n\r\nconst ProfileContainer = styled.div`\r\n\twidth: 80%;\r\n\theight: 200px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tborder: 2px solid;\r\n\tborder-radius: 6px;\r\n\tmargin-top: 16px;\r\n`;\r\n\r\nconst CustLoadDivTitle = styled.div`\r\n\twidth: ${({ width }) => width || \"80%\"};\r\n\theight: ${({ height }) => height || \"40px\"};\r\n\tbackground-color: gray;\r\n`;\r\n\r\nfunction CustLoadItem({ width, height, marginTop }) {\r\n\treturn (\r\n\t\t<LoadingElement\r\n\t\t\tstyle={{ marginTop: 8 }}\r\n\t\t\tpaddingTop={8}\r\n\t\t\twidth=\"200px\"\r\n\t\t\theight=\"40px\"\r\n\t\t\tmarginBottom={8}\r\n\t\t\tmarginRight={8}\r\n\t\t\thasValue={false}\r\n\t\t>\r\n\t\t\t<CustLoadDivTitle width={width} height={height} />\r\n\t\t</LoadingElement>\r\n\t);\r\n}\r\n\r\nconst ProfilePicSection = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 20%;\r\n\theight: 100%;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-right: 1px solid;\r\n`;\r\nconst TextSection = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin: 8px;\r\n\twidth: 80%;\r\n`;\r\nconst Spacer = styled.div`\r\n\theight: ${({ height }) => height || \"8px\"};\r\n`;\r\n\r\nexport function LoadExample({}) {\r\n\treturn (\r\n\t\t<ProfileContainer>\r\n\t\t\t<ProfilePicSection>\r\n\t\t\t\t<ProfileSvg size={80} />\r\n\t\t\t</ProfilePicSection>\r\n\t\t\t<TextSection>\r\n\t\t\t\t<CustLoadItem width=\"90%\" />\r\n\t\t\t\t<Spacer height=\"16px\" />\r\n\t\t\t\t<CustLoadItem width=\"75%\" height=\"24px\" marginTop={8} />\r\n\t\t\t\t<Spacer />\r\n\t\t\t\t<CustLoadItem width=\"60%\" height=\"20px\" marginTop={8} />\r\n\t\t\t\t<Spacer />\r\n\t\t\t\t<CustLoadItem width=\"50%\" height=\"16px\" marginTop={8} />\r\n\t\t\t\t<Spacer />\r\n\t\t\t\t<CustLoadItem width=\"50%\" height=\"16px\" marginTop={8} />\r\n\t\t\t\t<Spacer />\r\n\t\t\t\t<CustLoadItem width=\"50%\" height=\"16px\" marginTop={8} />\r\n\t\t\t</TextSection>\r\n\t\t</ProfileContainer>\r\n\t);\r\n}\r\n","import \"./App.css\";\r\nimport VerticalAnswerSlider, { DUMMY_ANSWER_SET } from \"./VerticalSlider\";\r\nimport styled from \"styled-components\";\r\nimport ComponentContainer from \"./components/ComponentContainer\";\r\nimport { TagScanAnimation } from \"./components/NfcScanAnim\";\r\nimport { LoadExample } from \"./components/LoadExample\";\r\nimport { Pressable } from \"react-native\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n\twidth: 100%;\r\n\tmargin-left: 5%;\r\n`;\r\n\r\nconst IntroText = styled.p`\r\n\tcolor: #871f78;\r\n\ttext-align: left;\r\n`;\r\n\r\nconst AnswerAmtContainer = styled.div`\r\n\twidth: 40%;\r\n\theight: 60px;\r\n\tborder: 1px solid;\r\n\tborder-radius: 16px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tbackground-color: white;\r\n`;\r\n\r\nconst AnswerItem = styled.div`\r\n\twidth: 33.3333%;\r\n\theight: 100%;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-right: ${({ isLast }) => (isLast ? \"0px\" : \"1px solid\")};\r\n\tborder-radius: ${({ isLast, isFirst }) =>\r\n\t\tisLast ? \"0px 16px 16px 0px\" : isFirst ? \"16px 0px 0px 16px\" : \"0px\"};\r\n\tbackground-color: ${({ isSelected }) =>\r\n\t\tisSelected ? \"#96d197\" : \"undefined\"};\r\n`;\r\n\r\nfunction HookAnswerItem({ text, isLast, index, setState, state, isFirst }) {\r\n\treturn (\r\n\t\t<AnswerItem isLast={isLast} isSelected={index === state} isFirst={isFirst}>\r\n\t\t\t<Pressable onPress={() => setState(index)}>\r\n\t\t\t\t<h4>{text}</h4>\r\n\t\t\t</Pressable>\r\n\t\t</AnswerItem>\r\n\t);\r\n}\r\n\r\nfunction App() {\r\n\t//0, 1, or 2.\r\n\tconst [selectedVertSliderCount, setSelectedVertSliderCount] = useState(1);\r\n\r\n\t// useEffect(() => {}, [selectedVertSliderCount]);\r\n\r\n\treturn (\r\n\t\t<Container className=\"App\">\r\n\t\t\t<h1>React Native Web Portfolio</h1>\r\n\t\t\t<TextContainer>\r\n\t\t\t\t<IntroText>\r\n\t\t\t\t\tHi, I'm Reno. Below are some of the React (Native) components I have\r\n\t\t\t\t\tmade in the past 1.5 years.\r\n\t\t\t\t</IntroText>\r\n\t\t\t\t<IntroText>\r\n\t\t\t\t\t17-09: Working on extracting components from app work to this\r\n\t\t\t\t\tportfolio. <br />\r\n\t\t\t\t\tNext items: selector for # of answers on vertical slider and animation\r\n\t\t\t\t\tcomponents. <br />\r\n\t\t\t\t\tShould be online by 20-09.\r\n\t\t\t\t</IntroText>\r\n\t\t\t</TextContainer>\r\n\t\t\t<ComponentContainer\r\n\t\t\t\ttitle={\"React Native + React Native web Answer Slider\"}\r\n\t\t\t>\r\n\t\t\t\t{/* <h4> answer amt selector</h4>\r\n\t\t\t\t<AnswerAmtContainer>\r\n\t\t\t\t\t<HookAnswerItem\r\n\t\t\t\t\t\ttext=\"3\"\r\n\t\t\t\t\t\tindex={0}\r\n\t\t\t\t\t\tsetState={setSelectedVertSliderCount}\r\n\t\t\t\t\t\tstate={selectedVertSliderCount}\r\n\t\t\t\t\t\tisFirst={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<HookAnswerItem\r\n\t\t\t\t\t\ttext=\"5\"\r\n\t\t\t\t\t\tindex={1}\r\n\t\t\t\t\t\tsetState={setSelectedVertSliderCount}\r\n\t\t\t\t\t\tstate={selectedVertSliderCount}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<HookAnswerItem\r\n\t\t\t\t\t\ttext=\"7\"\r\n\t\t\t\t\t\tindex={2}\r\n\t\t\t\t\t\tsetState={setSelectedVertSliderCount}\r\n\t\t\t\t\t\tstate={selectedVertSliderCount}\r\n\t\t\t\t\t\tisLast={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</AnswerAmtContainer> */}\r\n\t\t\t\t<h3>How likely are you to recommend this product?</h3>\r\n\r\n\t\t\t\t<VerticalAnswerSlider\r\n\t\t\t\t\tanswerArray={DUMMY_ANSWER_SET[selectedVertSliderCount]}\r\n\t\t\t\t/>\r\n\t\t\t</ComponentContainer>\r\n\t\t\t<ComponentContainer title={\"NFC Scan Animation (Android)\"}>\r\n\t\t\t\t<TagScanAnimation />\r\n\t\t\t</ComponentContainer>\r\n\t\t\t<ComponentContainer title={\"Twitter-style loading animation\"}>\r\n\t\t\t\t<LoadExample />\r\n\t\t\t</ComponentContainer>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}