{"version":3,"sources":["style/theme/Theme.js","style/responsive.js","style/theme/index.js","lib/theme.js","VerticalSlider.js","App.js","reportWebVitals.js","index.js"],"names":["Colors","main","text","link","header","secondary","disabled","font","ablack","instructions","background","recording","this","aBlack","YES","NO","SOMEWHAT","Layout","paddingHorizontal","Theme","colors","layout","resRange","minResolution","maxResolution","whResRange","minWidth","minHeight","maxWidth","maxHeight","width","height","DIMENSION_OPTS","mobile","mobileLandscape","tablet","tabletLandscape","tabletXL","tabletXLLandscape","laptop","_4K","global","createDimensionsObject","dimensions","isPortrait","isLandscape","sDimensions","EhState","fromInitialState","Dimensions","get","initialState","ph","percentage","min","max","numeric","pw","rsp","functionOf","rspArg","bind","createDimensionsInitialState","responsive","options","minVal","maxVal","maxLim","minLim","baseUnit","res","Math","selectDefinition","state","keys","Object","firstKey","length","windowDim","key","dims","rspArgs","assign","definition","dimensionName","makeRsp","func","addEventListener","newDim","window","fire","plugRsp","size","percentageDimension","dim","mainTheme","require","primary","placeholder","error","paddingTop","sTheme","theme","GRADIENT_COLOR_1","GRADIENT_COLOR_2","GRADIENT_COLOR_3","SLIDER_MOVEMENT_MARGIN","Container","withEhState","styled","View","GradientSliderView","LinearGradient","SlideAnswerSpacer","AnswerContainer","Animated","SliderButton","AnswerView","Pressable","isSelected","AnswerText","Text","BackgroundColorView","itemHeightPct","color","topPos","shadows","StyleSheet","create","boxShadow","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","startAnim","anim","toVal","duration","timing","toValue","useNativeDriver","start","getCurrentAnswerIndex","choiceVal","totalItemAmt","ceil","renderAnswerValues","answerArray","userAnswer","currentColor","slideAnim","colorAnimInterp","setCurrButtonLoc","buttonAnim","textBoxColorAnimInterp","answerNumber","answerBoxHeight","console","log","map","answer","idx","onPress","limit","newButtonLoc","style","backgroundColor","transform","translateY","getInterpolatedColor","color_1","color_2","interp","interpolateRgb","colorInterpolator","VerticalAnswerSlider","useState","currButtonLoc","setUserAnswer","setCurrentColor","setAnswerBoxHeight","setAnswerNumber","textBoxColorAnim","useRef","Value","current","interpolate","inputRange","outputRange","colorAnim","gestureOffset","y","useEffect","buttonLoc","boxHeight","margin","val","buttonLocToAnswer","setValue","TRANSITION_DELAY","panResponder","useMemo","PanResponder","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","dy","onPanResponderTerminationRequest","onPanResponderRelease","snapVal","totalOffset","tempOffset","onPanResponderTerminate","onShouldBlockNativeResponder","locations","panHandlers","onLayout","e","nativeEvent","div","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bce6cb3.chunk.js","sourcesContent":["export class Colors {\r\n\tconstructor(\r\n\t\tmain,\r\n\t\ttext,\r\n\t\tlink,\r\n\t\theader,\r\n\t\tsecondary,\r\n\t\tdisabled,\r\n\t\tfont,\r\n\t\tablack,\r\n\t\tinstructions,\r\n\t\tbackground,\r\n\t\trecording\r\n\t) {\r\n\t\tthis.main = main;\r\n\t\tthis.text = text;\r\n\t\tthis.link = link;\r\n\t\tthis.header = header;\r\n\t\tthis.secondary = secondary;\r\n\t\tthis.disabled = disabled;\r\n\t\tthis.font = font;\r\n\t\tthis.aBlack = ablack;\r\n\t\tthis.instructions = instructions;\r\n\t\tthis.background = background;\r\n\t\tthis.recording = recording;\r\n\t\tthis.YES = \"yes\";\r\n\t\tthis.NO = \"no\";\r\n\t\tthis.SOMEWHAT = \"somewhat\";\r\n\t}\r\n}\r\n\r\nexport class Layout {\r\n\tconstructor(paddingHorizontal) {\r\n\t\tthis.paddingHorizontal = paddingHorizontal;\r\n\t}\r\n}\r\n\r\nexport class Theme {\r\n\t/**\r\n\t *\r\n\t * @param {Colors} colors\r\n\t * @param {Layout} layout\r\n\t */\r\n\tconstructor(colors, layout) {\r\n\t\tthis.colors = colors;\r\n\t\tthis.layout = layout;\r\n\t}\r\n}\r\n","import { EhState } from \"@foursk/eh\";\r\nimport { Dimensions } from \"react-native\";\r\n// import { NOT } from '../lib/utils';\r\n\r\n/**\r\n * @typedef {{minResolution: number, maxResolution: number}} ResolutionRange\r\n *\r\n *\r\n * @typedef {{width: ResolutionRange, height: ResolutionRange}} DimensionRanges\r\n *\r\n * @typedef {{minVal: number, maxVal: number, maxLim: number, minLim: number}} ResponsiveDefinitions\r\n *\r\n * @typedef {\"width\" | \"height\"} FunctionOfDimension\r\n *\r\n * @typedef {ResolutionRange & ResponsiveDefinitions & {\r\n * baseUnit: \"px\" | \"%\",\r\n * functionOf: FunctionOfDimension\r\n * }} ResponsiveOptions\r\n *\r\n * @typedef {{[dim in keyof DIMENSION_OPTS]: ResponsiveDefinitions}} ResponsivenessArgument\r\n */\r\n\r\n/**\r\n *\r\n * @param {number} minResolution\r\n * @param {number} maxResolution\r\n * @returns {ResolutionRange}\r\n */\r\nconst resRange = (minResolution, maxResolution) => ({\r\n\tminResolution,\r\n\tmaxResolution,\r\n});\r\n\r\n/**\r\n *\r\n * @param {number} minWidth\r\n * @param {number} minHeight\r\n * @param {number} maxWidth\r\n * @param {number} maxHeight\r\n * @returns {DimensionRanges}\r\n */\r\nconst whResRange = (minWidth, minHeight, maxWidth, maxHeight) => ({\r\n\twidth: resRange(minWidth, maxWidth),\r\n\theight: resRange(minHeight, maxHeight),\r\n});\r\n\r\nexport const DIMENSION_OPTS = {\r\n\tmobile: whResRange(320, 568, 375, 812),\r\n\tmobileLandscape: whResRange(568, 320, 812, 375),\r\n\ttablet: whResRange(375, 812, 768, 1024),\r\n\ttabletLandscape: whResRange(812, 375, 1024, 768),\r\n\ttabletXL: whResRange(768, 1024, 1366, 1366),\r\n\ttabletXLLandscape: whResRange(1024, 768, 1366, 1366),\r\n\tlaptop: whResRange(1440, 800, 1920, 900),\r\n\t_4K: whResRange(1920, 900, 2560, 1000),\r\n\tglobal: whResRange(320, 568, 1920, 900),\r\n};\r\n\r\n/**\r\n *\r\n * @param {import('react-native').ScaledSize} dimensions\r\n */\r\nfunction createDimensionsObject(dimensions) {\r\n\tconst isPortrait = dimensions.height > dimensions.width;\r\n\treturn {\r\n\t\tdimensions,\r\n\t\tisPortrait,\r\n\t\tisLandscape: !isPortrait,\r\n\t};\r\n}\r\n\r\nfunction createDimensionsInitialState() {\r\n\tconst dimensions = Dimensions.get(\"window\");\r\n\tconst initialState = {\r\n\t\t...createDimensionsObject(dimensions),\r\n\t\t/**\r\n\t\t * Set size as percentage of window height\r\n\t\t * @param {number} percentage\r\n\t\t * @param {number?} min\r\n\t\t * @param {number?} max\r\n\t\t */\r\n\t\tph(percentage, min, max, numeric = false) {\r\n\t\t\treturn ph(percentage, min, max, this.dimensions, numeric);\r\n\t\t},\r\n\t\t/**\r\n\t\t * Set size as percentage of window width\r\n\t\t * @param {number} percentage\r\n\t\t * @param {number?} min\r\n\t\t * @param {number?} max\r\n\t\t */\r\n\t\tpw(percentage, min, max, numeric = false) {\r\n\t\t\treturn pw(percentage, min, max, this.dimensions, numeric);\r\n\t\t},\r\n\t\t/**\r\n\t\t *\r\n\t\t * @param {FunctionOfDimension} functionOf\r\n\t\t * @param {ResponsivenessArgument} rspArg\r\n\t\t */\r\n\t\trsp(functionOf, rspArg) {\r\n\t\t\treturn rsp(this.dimensions, functionOf, false, rspArg);\r\n\t\t},\r\n\t};\r\n\r\n\tinitialState.ph = initialState.ph.bind(initialState);\r\n\tinitialState.pw = initialState.pw.bind(initialState);\r\n\treturn initialState;\r\n}\r\n\r\nexport const sDimensions = EhState.fromInitialState(\r\n\tcreateDimensionsInitialState()\r\n);\r\n\r\nDimensions.addEventListener(\"change\", ({ window }) => {\r\n\tconst newDim = createDimensionsObject(window);\r\n\tsDimensions.fire(newDim);\r\n});\r\n\r\nexport function styledPortrait(portraitVal, landscapeVal) {\r\n\treturn ({ isPortrait }) => (isPortrait ? portraitVal : landscapeVal);\r\n}\r\n\r\n/**\r\n *\r\n * @param {ResponsiveOptions} options\r\n * @param {boolean} numeric\r\n */\r\nexport function responsive(options, numeric) {\r\n\tconst {\r\n\t\tminResolution,\r\n\t\tmaxResolution,\r\n\t\tminVal,\r\n\t\tmaxVal,\r\n\t\tmaxLim,\r\n\t\tminLim,\r\n\t\tbaseUnit,\r\n\t\tfunctionOf,\r\n\t} = options;\r\n\r\n\t// console.log('RSP', {\r\n\t//   minResolution,\r\n\t//   maxResolution,\r\n\t//   minVal,\r\n\t//   maxVal,\r\n\t//   maxLim,\r\n\t//   minLim,\r\n\t//   baseUnit,\r\n\t//   functionOf\r\n\t// });\r\n\t// const functionOf =\r\n\t//   functionOfStr === 'width' ? dimensions.width : dimensions.height;\r\n\r\n\tlet res =\r\n\t\tminVal +\r\n\t\t((functionOf - minResolution) * (maxVal - minVal)) /\r\n\t\t\t(maxResolution - minResolution);\r\n\tconst resOrig = res;\r\n\r\n\tif (minLim) res = Math.max(minLim, res);\r\n\tif (maxLim) res = Math.min(maxLim, res);\r\n\tif (numeric) return res;\r\n\r\n\t// console.log('RSP', {\r\n\t//   resOrig,\r\n\t//   res,\r\n\t//   minResolution,\r\n\t//   maxResolution,\r\n\t//   minVal,\r\n\t//   maxVal,\r\n\t//   maxLim,\r\n\t//   minLim,\r\n\t//   baseUnit,\r\n\t//   functionOf\r\n\t// });\r\n\r\n\tconst strRes = `${res}${baseUnit || \"px\"}`;\r\n\treturn strRes;\r\n}\r\n\r\n/**\r\n *\r\n * @param {ResponsivenessArgument} rspArg\r\n * @param {FunctionOfDimension} functionOf\r\n * @returns {[ResponsiveDefinitions, keyof DIMENSION_OPTS]}\r\n */\r\nexport function selectDefinition(\r\n\trspArg,\r\n\tfunctionOf,\r\n\tdimensions = sDimensions.state\r\n) {\r\n\t/** @type {[keyof DIMENSION_OPTS]} */\r\n\tconst keys = Object.keys(rspArg);\r\n\tconst firstKey = keys[0];\r\n\tif (keys.length === 1) {\r\n\t\treturn [rspArg[firstKey], firstKey];\r\n\t}\r\n\r\n\tconst windowDim = dimensions[functionOf];\r\n\t// console.log('windowDim', windowDim);\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst dims = DIMENSION_OPTS[key][functionOf];\r\n\t\tif (windowDim <= dims.maxResolution && windowDim >= dims.minResolution) {\r\n\t\t\treturn [rspArg[key], key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn [rspArg[firstKey], firstKey];\r\n}\r\n\r\n/**\r\n * @param {import('react-native').ScaledSize} dimensions\r\n * @param {FunctionOfDimension} functionOf\r\n * @param {boolean} numeric\r\n * @param {ResponsivenessArgument} rspArg\r\n * @param {...ResponsivenessArgument} rspArgs\r\n */\r\nexport function rsp(dimensions, functionOf, numeric, rspArg, ...rspArgs) {\r\n\t// console.log('RSP', { dimensions, functionOf, rspArg });\r\n\tif (rspArgs.length > 0) Object.assign(rspArg, ...rspArgs);\r\n\tconst [definition, dimensionName] = selectDefinition(\r\n\t\trspArg,\r\n\t\tfunctionOf,\r\n\t\tdimensions\r\n\t);\r\n\t// console.log('definition', { definition, dimensionName });\r\n\tObject.assign(definition, DIMENSION_OPTS[dimensionName][functionOf]);\r\n\t// console.log('dimensions[functionOf]', { dimensions, functionOf });\r\n\tdefinition.functionOf = dimensions[functionOf];\r\n\treturn responsive(definition, numeric);\r\n}\r\n\r\n/**\r\n * Make rsp function for component that is rendered with sDimensions [withEhState(sDimensions)]\r\n * @param {FunctionOfDimension} functionOf\r\n * @param {ResponsivenessArgument} rspArg\r\n * @param {...ResponsivenessArgument} rspArgs\r\n */\r\nexport function makeRsp(functionOf, rspArg, ...rspArgs) {\r\n\t/**\r\n\t *\r\n\t * @param {{dimensions: import('react-native').ScaledSize}} param0\r\n\t * @param {boolean} numeric\r\n\t */\r\n\tconst func = function ({ dimensions }, numeric) {\r\n\t\treturn rsp(dimensions, functionOf, numeric, rspArg, ...rspArgs);\r\n\t};\r\n\treturn func;\r\n}\r\n\r\n/**\r\n * @typedef {({dimensions: ScaledSize}, numeric:boolean) => string | number} RSPFunction\r\n * @param {RSPFunction} portrait\r\n * @param {RSPFunction} landscape\r\n */\r\nexport function makeLandscapableRsp(portrait, landscape) {\r\n\t/**\r\n\t *\r\n\t * @param {{dimensions: import('react-native').ScaledSize}} param0\r\n\t * @param {boolean} numeric\r\n\t */\r\n\tconst func = function (dimState, numeric) {\r\n\t\tconst { isPortrait } = dimState;\r\n\t\tconst rspFunc = isPortrait ? portrait : landscape;\r\n\t\treturn rspFunc(dimState, numeric);\r\n\t};\r\n\treturn func;\r\n}\r\n\r\n/**\r\n *\r\n * @param {keyof DIMENSION_OPTS} size\r\n * @param {number} minVal\r\n * @param {number} maxVal\r\n * @param {number} minLim\r\n * @param {number} maxLim\r\n * @returns {ResponsivenessArgument}\r\n */\r\nexport const plugRsp = (size, minVal, maxVal, minLim, maxLim) => ({\r\n\t[size]: {\r\n\t\tminVal,\r\n\t\tmaxVal,\r\n\t\tminLim,\r\n\t\tmaxLim,\r\n\t},\r\n});\r\n\r\n/**\r\n *\r\n * @param {number} minResolution\r\n * @param {number} maxResolution\r\n * @returns {ResolutionRange}\r\n */\r\nexport const customRange = (minResolution, maxResolution) => ({\r\n\tminResolution,\r\n\tmaxResolution,\r\n});\r\n\r\n/**\r\n *\r\n * @param {number} percentage\r\n * @param {number} dim\r\n * @param {number?} min\r\n * @param {number?} max\r\n */\r\nfunction percentageDimension(percentage, dim, min, max, numeric = false) {\r\n\tlet res = (percentage * dim) / 100;\r\n\tif (min) res = Math.max(min, res);\r\n\tif (max) res = Math.min(max, res);\r\n\tif (numeric) return res;\r\n\treturn `${res}px`;\r\n}\r\n\r\n/**\r\n *\r\n * @param {number} percentage\r\n * @param {number?} min\r\n * @param {number?} max\r\n * @param {DimensionRanges} dimensions\r\n */\r\nexport function ph(\r\n\tpercentage,\r\n\tmin,\r\n\tmax,\r\n\tdimensions = sDimensions.state,\r\n\tnumeric = false\r\n) {\r\n\treturn percentageDimension(percentage, dimensions.height, min, max, numeric);\r\n}\r\n\r\n/**\r\n *\r\n * @param {number} percentage\r\n * @param {number?} min\r\n * @param {number?} max\r\n * * @param {DimensionRanges} dimensions\r\n */\r\nexport function pw(\r\n\tpercentage,\r\n\tmin,\r\n\tmax,\r\n\tdimensions = sDimensions.state,\r\n\tnumeric = false\r\n) {\r\n\treturn percentageDimension(percentage, dimensions.width, min, max, numeric);\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst { Theme } = require(\"./Theme\");\r\n\r\nexport const mainTheme = new Theme(\r\n\t{\r\n\t\tprimary: \"#53B5AB\",\r\n\t\tsecondary: \"white\",\r\n\t\tdisabled: \"rgba(83, 181, 171, 0.5)\",\r\n\t\theader: \"#2F464B\",\r\n\t\ttext: \"#2F464B\",\r\n\t\tplaceholder: \"#ABABAB\",\r\n\t\tfont: \"Poppins-Medium\",\r\n\t\taBlack: \"#504f54\",\r\n\t\terror: \"#DD1010\",\r\n\t\tinstructions: \"rgba(47,72,75,0.6)\",\r\n\t\tmain: \"#53B4AB\",\r\n\t\tbackground: \"#FAFAFA\",\r\n\t\trecording: \"#BC301F\",\r\n\t\tYES: \"rgb(186,34,34)\",\r\n\t\tSOMEWHAT: \"rgb(199,154,0)\",\r\n\t\tNO: \"rgb(74,181,117)\",\r\n\t},\r\n\t{\r\n\t\tpaddingHorizontal: \"20px\",\r\n\t\tpaddingTop: \"20px\",\r\n\t}\r\n);\r\n\r\n// export const withPadding = (Comp) => ({ ...props }) => styled(Comp)``;\r\n","import { EhState } from \"@foursk/eh\";\r\nimport { mainTheme } from \"../style/theme\";\r\n\r\nexport const sTheme = EhState.fromInitialState({ theme: mainTheme });\r\n","import { withEhState } from \"@foursk/eh-react-hooks\";\r\nimport { interpolateRgb } from \"d3-interpolate\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { Animated, PanResponder, Pressable, StyleSheet } from \"react-native\";\r\nimport LinearGradient from \"react-native-web-linear-gradient\";\r\nimport styled from \"styled-components/native\";\r\nimport { sDimensions, makeRsp, plugRsp } from \"./style/responsive\";\r\nimport { sTheme } from \"./lib/theme\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst GRADIENT_COLOR_1 = \"#BA2222\";\r\nconst GRADIENT_COLOR_2 = \"#C79A00\";\r\nconst GRADIENT_COLOR_3 = \"#4AB575\";\r\nconst TRANSITION_DELAY = 500;\r\nconst SLIDER_MOVEMENT_MARGIN = 0.9;\r\n\r\n// Mobile  w: 320-375, tab  w: 375-768, global  w: 320-1920\r\n//         h: 568-812       h: 812-1024         h: 568-900\r\n// Specs mobile:\r\n// Width: 206-219 @ 332-414\r\n// Height: 191-199 @ 719-896\r\n// Specs Global:\r\n// Width: 206.72-275 @ 1024-1920\r\n// Height: 191-249 @ 905-1428\r\nconst Container = withEhState(\r\n\tsDimensions,\r\n\twithEhState(\r\n\t\tsTheme,\r\n\t\tstyled.View`\r\n\t\t\tflex-direction: row;\r\n\t\t\t/*\r\n      width: ${makeRsp(\r\n\t\t\t\t\"width\",\r\n\t\t\t\tplugRsp(\"mobile\", 200, 230, 195, 240),\r\n\t\t\t\tplugRsp(\"tablet\", 230, 270, 220, 280),\r\n\t\t\t\tplugRsp(\"global\", 200, 275, 195, 275)\r\n\t\t\t)};\r\n      */\r\n\t\t\theight: ${makeRsp(\r\n\t\t\t\t\"height\",\r\n\t\t\t\tplugRsp(\"mobile\", 190, 200),\r\n\t\t\t\tplugRsp(\"tablet\", 200, 240),\r\n\t\t\t\tplugRsp(\"global\", 200, 249)\r\n\t\t\t)};\r\n\t\t\tmargin-top: 16px;\r\n\t\t`\r\n\t)\r\n);\r\n\r\n// Mobile  w: 320-375, tab  w: 375-768, global  w: 320-1920\r\n//         h: 568-812       h: 812-1024         h: 568-900\r\n// Specs mobile:\r\n// Width: 19.18-19.98 @ 332-414\r\n// Specs Global:\r\n// Width:  @ 1024-1920\r\nconst GradientSliderView = withEhState(\r\n\tsDimensions,\r\n\tstyled(LinearGradient)`\r\n\t\tflex-direction: column;\r\n\t\theight: 100%;\r\n\t\twidth: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 19.18, 20),\r\n\t\t\tplugRsp(\"tablet\", 20, 22.57),\r\n\t\t\tplugRsp(\"global\", 20, 25)\r\n\t\t)};\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\talign-self: center;\r\n\t\tborder-radius: 25px;\r\n\t`\r\n);\r\n\r\n// mobile: 27.54 - 29.02\r\n// web: 27.54 - 37\r\nconst SlideAnswerSpacer = withEhState(\r\n\tsDimensions,\r\n\tstyled.View`\r\n\t\twidth: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 27, 30),\r\n\t\t\tplugRsp(\"tablet\", 30, 33),\r\n\t\t\tplugRsp(\"global\", 27.54, 37)\r\n\t\t)};\r\n\t`\r\n);\r\n\r\n// w.m: 160-170\r\n// w.g: 160-213\r\nconst AnswerContainer = withEhState(\r\n\tsDimensions,\r\n\tstyled(Animated.View)`\r\n\t\tflex-direction: column-reverse;\r\n\t\twidth: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 160, 170, 160, 170),\r\n\t\t\tplugRsp(\"tablet\", 170, 200, 170, 200),\r\n\t\t\tplugRsp(\"global\", 180, 213)\r\n\t\t)};\r\n\t\theight: 100%;\r\n\t\tjustify-content: space-evenly;\r\n\t\talign-items: center;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: ${makeRsp(\"width\", plugRsp(\"global\", 19, 25))};\r\n\t`\r\n);\r\n\r\n// m.w: 16.11 - 16.78\r\n// g.w: 16.11 - 21\r\nconst SliderButton = withEhState(\r\n\tsDimensions,\r\n\tstyled(Animated.View)`\r\n\t\twidth: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 16, 17),\r\n\t\t\tplugRsp(\"tablet\", 17, 19),\r\n\t\t\tplugRsp(\"global\", 16, 21, 16, 23)\r\n\t\t)};\r\n\t\theight: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 16, 17),\r\n\t\t\tplugRsp(\"tablet\", 17, 19),\r\n\t\t\tplugRsp(\"global\", 16, 21, 16, 23)\r\n\t\t)};\r\n\t\tborder-radius: ${makeRsp(\r\n\t\t\t\"width\",\r\n\t\t\tplugRsp(\"mobile\", 8, 8.5),\r\n\t\t\tplugRsp(\"tablet\", 8.5, 9.5),\r\n\t\t\tplugRsp(\"global\", 8, 10.5, 8, 11.5)\r\n\t\t)};\r\n\t\tbackground-color: #ffffff;\r\n\t`\r\n);\r\n\r\nconst AnswerView = withEhState(\r\n\tsDimensions,\r\n\tstyled(Pressable)`\r\n\t\t/* background-color: ${({ isSelected }) => isSelected} */\r\n\t\twidth: 100%;\r\n\t\theight: ${({ height }) => height};\r\n\t\tjustify-content: center;\r\n\t\tborder-radius: ${makeRsp(\"width\", plugRsp(\"global\", 23, 25))};\r\n\t\tz-index: 1;\r\n\t`\r\n);\r\n\r\n//fontsize.m: 18-20\r\n//fontsize.g: 18-24\r\nconst AnswerText = withEhState(\r\n\tsDimensions,\r\n\tstyled(Animated.Text)`\r\n\t\tfont-family: \"Inter, Helvetica\";\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: ${({ isSelected }) => (isSelected ? 600 : 400)};\r\n\t\tfont-size: ${makeRsp(\"width\", plugRsp(\"global\", 18, 24))};\r\n\t\tline-height: ${makeRsp(\"width\", plugRsp(\"global\", 22, 29))};\r\n\t\ttext-align: center;\r\n\t`\r\n);\r\n\r\nconst BackgroundColorView = withEhState(\r\n\tsDimensions,\r\n\tstyled(Animated.View)`\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: ${({ itemHeightPct }) => itemHeightPct};\r\n\t\t/* background-color: ${({ color }) => color}; */\r\n\t\tz-index: 0;\r\n\t\ttop: ${({ topPos }) => topPos};\r\n\t\tborder-radius: ${makeRsp(\"width\", plugRsp(\"global\", 23, 25))};\r\n\t`\r\n);\r\n\r\nconst shadows = StyleSheet.create({\r\n\tboxShadow: {\r\n\t\tshadowColor: \"rgb(62, 85, 90)\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.1,\r\n\t\tshadowRadius: 8,\r\n\t\televation: 3,\r\n\t},\r\n});\r\n\r\n// Preferred 2 funcs over 1 func with an extra param everywhere\r\nfunction startAnim(anim, toVal, duration) {\r\n\tAnimated.timing(anim, {\r\n\t\ttoValue: toVal,\r\n\t\tduration: duration ? duration : TRANSITION_DELAY,\r\n\t\tuseNativeDriver: false,\r\n\t}).start();\r\n}\r\n\r\nfunction colorSwitch(anim, toVal) {\r\n\tAnimated.timing(anim, {\r\n\t\ttoValue: toVal,\r\n\t\tduration: TRANSITION_DELAY + 200,\r\n\t\tuseNativeDriver: false,\r\n\t}).start();\r\n}\r\n\r\nfunction getCurrentAnswerIndex(choiceVal, totalItemAmt) {\r\n\tif (choiceVal <= 0) return 0;\r\n\tif (choiceVal >= 100) return totalItemAmt - 1;\r\n\tconst ansIndex = Math.ceil(choiceVal / (100 / totalItemAmt)) - 1;\r\n\treturn ansIndex;\r\n}\r\n\r\nfunction buttonLocToAnswer(buttonLoc, boxHeight, margin) {\r\n\tconst val = 50 - (50 / ((boxHeight * margin) / 2)) * buttonLoc;\r\n\tif (val < 0) return 0;\r\n\tif (val > 100) return 100;\r\n\treturn val;\r\n}\r\n\r\nfunction renderAnswerValues(\r\n\tanswerArray,\r\n\tuserAnswer,\r\n\tcurrentColor,\r\n\tslideAnim,\r\n\tcolorAnimInterp,\r\n\tsetCurrButtonLoc,\r\n\tbuttonAnim,\r\n\ttextBoxColorAnimInterp,\r\n\tanswerNumber,\r\n\tanswerBoxHeight\r\n) {\r\n\tif (answerArray.length < 3 || answerArray.length > 7)\r\n\t\treturn console.log(\r\n\t\t\t\"Error! Need between 3 and 7 values, but got: \",\r\n\t\t\tanswerArray.length\r\n\t\t);\r\n\r\n\t// gets the percentage height an item has relative to the view.\r\n\tconst itemHeightPct = `${100 / answerArray.length}%`;\r\n\treturn (\r\n\t\t<AnswerContainer>\r\n\t\t\t{answerArray.map((answer, idx) => (\r\n\t\t\t\t<AnswerView\r\n\t\t\t\t\tkey={idx}\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tconst limit = (answerBoxHeight * SLIDER_MOVEMENT_MARGIN) / 2;\r\n\t\t\t\t\t\tconst newButtonLoc =\r\n\t\t\t\t\t\t\t(-(idx * ((limit * 2) / answerArray.length)) +\r\n\t\t\t\t\t\t\t\tlimit -\r\n\t\t\t\t\t\t\t\tlimit / answerArray.length) *\r\n\t\t\t\t\t\t\t(1 - SLIDER_MOVEMENT_MARGIN + 1);\r\n\t\t\t\t\t\tsetCurrButtonLoc(newButtonLoc);\r\n\t\t\t\t\t\tstartAnim(buttonAnim, newButtonLoc);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t/* isSelected can be shortened to just {currentColor}, but I fear it might be less\r\n            robust. Just a gut feeling. */\r\n\t\t\t\t\tisSelected={currentColor}\r\n\t\t\t\t\theight={itemHeightPct}\r\n\t\t\t\t>\r\n\t\t\t\t\t<AnswerText\r\n\t\t\t\t\t\t/* Setting of color must be done inline. */\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tcolor: answerNumber === idx ? colorAnimInterp : \"rgb(47, 70, 75)\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{answer}\r\n\t\t\t\t\t</AnswerText>\r\n\t\t\t\t</AnswerView>\r\n\t\t\t))}\r\n\t\t\t{/* Background for the text. This one DOES have to be absolute. Since the items\r\n        are laid out in an evenly spaced manner, 1 item's height = totalHeight / # of items.\r\n        This allows for a consistent animation, regardless of # of answer vals.  */}\r\n\t\t\t<BackgroundColorView\r\n\t\t\t\titemHeightPct={itemHeightPct}\r\n\t\t\t\ttopPos={0}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: textBoxColorAnimInterp,\r\n\t\t\t\t\ttransform: [{ translateY: slideAnim }],\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</AnswerContainer>\r\n\t);\r\n}\r\n\r\n// METHOD FOR GETTING RGB VALUES SEPARATELY TO MANUALLY INTERPOLATE:\r\n// var rgb = 'rgb(200, 12, 53)';\r\n// rgb = rgb.replace(/[^\\d,]/g, '').split(',');\r\n// console.log(rgb);\r\nfunction getInterpolatedColor(color_1, color_2, interp) {\r\n\tconst colorInterpolator = interpolateRgb(color_1, color_2);\r\n\treturn colorInterpolator(interp);\r\n}\r\n\r\nexport default function VerticalAnswerSlider({ answerArray }) {\r\n\t// currButtonLoc ranges from - to + component height * margin / 2.\r\n\tconst [currButtonLoc, setCurrButtonLoc] = useState(0);\r\n\r\n\t// currButtonLoc is converted to user's choice on a scale of 0-100\r\n\t// by inverting the value (*-1), incrementing currButtonLoc\r\n\t// by 100 and then dividing by 2 in a useEffect.\r\n\t// Initial state is 50 since it is the center value, which is where the button starts.\r\n\tconst [userAnswer, setUserAnswer] = useState(50);\r\n\t// Base color starts at the middle as well, so the center color.\r\n\tconst [currentColor, setCurrentColor] = useState(GRADIENT_COLOR_2);\r\n\t// AnswerBox is instantiated with a non-zero value, and then immediately updated to\r\n\t// reflect the answer box's height once it is rendered.\r\n\tconst [answerBoxHeight, setAnswerBoxHeight] = useState(1);\r\n\t// Sets the currently selected answer as an index val between 0 and arr.length-1.\r\n\tconst [answerNumber, setAnswerNumber] = useState(\r\n\t\tgetCurrentAnswerIndex(userAnswer, answerArray.length)\r\n\t);\r\n\t// Sets the color of the colored box around the Answer Text values\r\n\tconst textBoxColorAnim = useRef(new Animated.Value(0.5)).current;\r\n\tconst textBoxColorAnimInterp = textBoxColorAnim.interpolate({\r\n\t\tinputRange: [0, 0.5, 1],\r\n\t\toutputRange: [GRADIENT_COLOR_1, GRADIENT_COLOR_2, GRADIENT_COLOR_3],\r\n\t});\r\n\t// Sets the color of the currently selected text\r\n\tconst colorAnim = useRef(new Animated.Value(0)).current;\r\n\tconst colorAnimInterp = colorAnim.interpolate({\r\n\t\tinputRange: [0, 1],\r\n\t\toutputRange: [\"rgb(47, 70, 75)\", \"rgb(255, 255, 255)\"],\r\n\t});\r\n\t// slideAnim handles the location of the colored box around the Answer Text values\r\n\tconst slideAnim = useRef(new Animated.Value(100)).current;\r\n\t// buttonAnim handles the location of the button inside the slider.\r\n\tconst buttonAnim = useRef(new Animated.Value(0)).current;\r\n\t// gestureOffset must be an object because updating it inside the panResponder\r\n\t// leads to issue if it's created as a State.\r\n\t// UPDATE: should be able to change it to a state now, if preferred.\r\n\tconst gestureOffset = { y: 0 };\r\n\r\n\tuseEffect(() => {\r\n\t\tgestureOffset.y = currButtonLoc;\r\n\t\t// Set current answer value (0-100) based on button location.\r\n\t\t// Current buttonLoc range: [-90, 90].\r\n\t\tsetUserAnswer(\r\n\t\t\tbuttonLocToAnswer(currButtonLoc, answerBoxHeight, SLIDER_MOVEMENT_MARGIN)\r\n\t\t);\r\n\t\t// Check if the new answer value changes the selection item, so that\r\n\t\t// A text color change can trigger on change.\r\n\t\tsetAnswerNumber(getCurrentAnswerIndex(userAnswer, answerArray.length));\r\n\t\tsetCurrentColor(\r\n\t\t\tuserAnswer < 50\r\n\t\t\t\t? getInterpolatedColor(\r\n\t\t\t\t\t\tGRADIENT_COLOR_3,\r\n\t\t\t\t\t\tGRADIENT_COLOR_2,\r\n\t\t\t\t\t\tuserAnswer / 50\r\n\t\t\t\t  )\r\n\t\t\t\t: getInterpolatedColor(\r\n\t\t\t\t\t\tGRADIENT_COLOR_2,\r\n\t\t\t\t\t\tGRADIENT_COLOR_1,\r\n\t\t\t\t\t\tuserAnswer / 50 - 1\r\n\t\t\t\t  )\r\n\t\t);\r\n\t\t// Update the offset in case the user clicked on a text answer.\r\n\t\tgestureOffset.y = currButtonLoc;\r\n\t\t// Animation to change the colored box's color around text answers.\r\n\t\tstartAnim(textBoxColorAnim, -(userAnswer - 100) / 100);\r\n\t\t// Animation to move the colored box around text answers.\r\n\t\tstartAnim(\r\n\t\t\tslideAnim,\r\n\t\t\tgetCurrentAnswerIndex((userAnswer - 100) * -1, answerArray.length) *\r\n\t\t\t\t(answerBoxHeight / answerArray.length)\r\n\t\t);\r\n\t}, [currButtonLoc, userAnswer, answerBoxHeight]);\r\n\r\n\tuseEffect(() => {\r\n\t\tcolorAnim.setValue(0);\r\n\t\tcolorSwitch(colorAnim, 1);\r\n\t}, [answerNumber, answerBoxHeight, colorAnim]);\r\n\r\n\tconst panResponder = useMemo(\r\n\t\t() =>\r\n\t\t\tPanResponder.create({\r\n\t\t\t\t// Ask to be the responder:\r\n\t\t\t\tonStartShouldSetPanResponder: (evt, gestureState) => true,\r\n\t\t\t\tonStartShouldSetPanResponderCapture: (evt, gestureState) => true,\r\n\t\t\t\tonMoveShouldSetPanResponder: (evt, gestureState) => true,\r\n\t\t\t\tonMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\r\n\r\n\t\t\t\tonPanResponderGrant: (evt, gestureState) => {\r\n\t\t\t\t\t// The gesture has started. Show visual feedback so the user knows\r\n\t\t\t\t\t// what is happening!\r\n\t\t\t\t\t// gestureState.d{x,y} will be set to zero now\r\n\t\t\t\t},\r\n\t\t\t\tonPanResponderMove: (evt, gestureState) => {\r\n\t\t\t\t\t// The most recent move distance is gestureState.move{X,Y}\r\n\t\t\t\t\t// The accumulated gesture distance since becoming responder is\r\n\t\t\t\t\t// gestureState.d{x,y}\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tgestureState.dy + gestureOffset.y >=\r\n\t\t\t\t\t\t\t-(0.5 * answerBoxHeight * SLIDER_MOVEMENT_MARGIN) &&\r\n\t\t\t\t\t\tgestureState.dy + gestureOffset.y <=\r\n\t\t\t\t\t\t\t0.5 * answerBoxHeight * SLIDER_MOVEMENT_MARGIN\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tbuttonAnim.setValue(gestureOffset.y + gestureState.dy);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonPanResponderTerminationRequest: (evt, gestureState) => true,\r\n\t\t\t\tonPanResponderRelease: (evt, gestureState) => {\r\n\t\t\t\t\t// The user has released all touches while this view is the\r\n\t\t\t\t\t// responder. This typically means a gesture has succeeded\r\n\t\t\t\t\tlet limit = 0.5 * answerBoxHeight * SLIDER_MOVEMENT_MARGIN;\r\n\r\n\t\t\t\t\t// \"Snaps\" the slider button to the limit value if the button is within a certain\r\n\t\t\t\t\t// percentage of its max-min.\r\n\t\t\t\t\tlet snapVal = 1.05;\r\n\t\t\t\t\tlet totalOffset = gestureState.dy + gestureOffset.y;\r\n\t\t\t\t\tif (totalOffset * snapVal < -limit) {\r\n\t\t\t\t\t\tif (!(totalOffset < -limit)) {\r\n\t\t\t\t\t\t\tbuttonAnim.setValue(-limit);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgestureOffset.y = -limit;\r\n\t\t\t\t\t\tsetCurrButtonLoc(-limit);\r\n\t\t\t\t\t} else if (totalOffset * snapVal > limit) {\r\n\t\t\t\t\t\tif (!(totalOffset > limit)) {\r\n\t\t\t\t\t\t\tbuttonAnim.setValue(limit);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgestureOffset.y = limit;\r\n\t\t\t\t\t\tsetCurrButtonLoc(limit);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet tempOffset =\r\n\t\t\t\t\t\t\ttotalOffset * snapVal > limit\r\n\t\t\t\t\t\t\t\t? limit\r\n\t\t\t\t\t\t\t\t: totalOffset * snapVal < -limit\r\n\t\t\t\t\t\t\t\t? -limit\r\n\t\t\t\t\t\t\t\t: totalOffset;\r\n\t\t\t\t\t\tgestureOffset.y = tempOffset;\r\n\t\t\t\t\t\tsetCurrButtonLoc(tempOffset);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonPanResponderTerminate: (evt, gestureState) => {\r\n\t\t\t\t\t// Another component has become the responder, so this gesture\r\n\t\t\t\t\t// should be cancelled\r\n\t\t\t\t},\r\n\t\t\t\tonShouldBlockNativeResponder: (evt, gestureState) => {\r\n\t\t\t\t\t// Returns whether this component should block native components from becoming the JS\r\n\t\t\t\t\t// responder. Returns true by default. Is currently only supported on android.\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t[currButtonLoc, answerBoxHeight]\r\n\t);\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<GradientSliderView\r\n\t\t\t\tcolors={[GRADIENT_COLOR_1, GRADIENT_COLOR_2, GRADIENT_COLOR_3]}\r\n\t\t\t\tlocations={[0, 0.4964, 0.9929]}\r\n\t\t\t>\r\n\t\t\t\t<SliderButton\r\n\t\t\t\t\tstyle={{ transform: [{ translateY: buttonAnim }] }}\r\n\t\t\t\t\t{...panResponder.panHandlers}\r\n\t\t\t\t/>\r\n\t\t\t</GradientSliderView>\r\n\t\t\t<SlideAnswerSpacer />\r\n\t\t\t<AnswerContainer\r\n\t\t\t\tstyle={shadows.boxShadow}\r\n\t\t\t\tonLayout={(e) => {\r\n\t\t\t\t\tsetAnswerBoxHeight(e.nativeEvent.layout.height);\r\n\r\n\t\t\t\t\tslideAnim.setValue(\r\n\t\t\t\t\t\t(answerBoxHeight / answerArray.length) *\r\n\t\t\t\t\t\t\t(getCurrentAnswerIndex(userAnswer, answerArray.length) - 1)\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{renderAnswerValues(\r\n\t\t\t\t\tanswerArray,\r\n\t\t\t\t\tuserAnswer,\r\n\t\t\t\t\tcurrentColor,\r\n\t\t\t\t\tslideAnim,\r\n\t\t\t\t\tcolorAnimInterp,\r\n\t\t\t\t\tsetCurrButtonLoc,\r\n\t\t\t\t\tbuttonAnim,\r\n\t\t\t\t\ttextBoxColorAnimInterp,\r\n\t\t\t\t\tanswerNumber,\r\n\t\t\t\t\tanswerBoxHeight\r\n\t\t\t\t)}\r\n\t\t\t</AnswerContainer>\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import \"./App.css\";\nimport VerticalAnswerSlider from \"./VerticalSlider\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nfunction App() {\n\treturn (\n\t\t<Container className=\"App\">\n\t\t\t<h1>React Native + React Native web Answer Slider</h1>\n\t\t\t<h2>How likely are you to recommend this product?</h2>\n\t\t\t<VerticalAnswerSlider\n\t\t\t\tanswerArray={[\n\t\t\t\t\t\"Very likely\",\n\t\t\t\t\t\"Likely\",\n\t\t\t\t\t\"Neutral\",\n\t\t\t\t\t\"Unlikely\",\n\t\t\t\t\t\"Very unlikely\",\n\t\t\t\t]}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}